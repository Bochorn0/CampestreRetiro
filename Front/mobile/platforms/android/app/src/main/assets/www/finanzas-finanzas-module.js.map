{"version":3,"sources":["webpack:///./src/app/layout/finanzas/catalogo-cuentas/catalogo-cuentas.component.html","webpack:///./src/app/layout/finanzas/catalogo-cuentas/catalogo-cuentas.component.scss","webpack:///./src/app/layout/finanzas/catalogo-cuentas/catalogo-cuentas.component.ts","webpack:///./src/app/layout/finanzas/estado-financiero/estado-financiero.component.html","webpack:///./src/app/layout/finanzas/estado-financiero/estado-financiero.component.scss","webpack:///./src/app/layout/finanzas/estado-financiero/estado-financiero.component.ts","webpack:///./src/app/layout/finanzas/finanzas-routing.module.ts","webpack:///./src/app/layout/finanzas/finanzas.component.html","webpack:///./src/app/layout/finanzas/finanzas.component.scss","webpack:///./src/app/layout/finanzas/finanzas.component.ts","webpack:///./src/app/layout/finanzas/finanzas.module.ts","webpack:///./src/app/layout/finanzas/index.ts"],"names":[],"mappings":"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","file":"finanzas-finanzas-module.js","sourcesContent":["module.exports = \"<div class=\\\"col-lg-12\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n            <button (click)=\\\"obtenerCuentasActivas();\\\" class=\\\"btn btn-primary\\\"><i clas=\\\"fa fa-address-card\\\"></i> Cuentas Activas</button>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <button (click)=\\\"obtenerCuentasInactivas();\\\" class=\\\"btn btn-danger\\\"><i clas=\\\"fa fa-credit-card\\\"></i>  Cuentas Inactivas</button>\\n        </div>\\n        <div class=\\\"col-lg-4\\\">\\n            <button (click)=\\\"nuevaCuenta();\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Nueva Cuenta</button>\\n        </div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\" *ngIf=\\\"vistaCentro\\\">\\n        <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"datosCuentasEspeciales\\\">\\n                <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header bg-secondary\\\" >\\n                            Cuentas Especiales\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\" *ngIf=\\\"datosCuentasEspeciales\\\">\\n                                <div class=\\\"col-lg-12\\\">\\n                                    <app-datatables-general #datatableCuentas *ngIf=\\\"this.datosCuentasEspeciales\\\" [datosDatatable]=\\\"datosCuentasEspeciales\\\" (deactivate)=\\\"desactivarCuentaEspecial($event);\\\" (edit)=\\\"editarElemento($event);\\\" (activate)=\\\"activarCuentaEspecial($event);\\\" (delete)=\\\"borrarCuentaEspecial($event);\\\" ></app-datatables-general>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--Formulario Cuentas -->\\n            <div class=\\\"row\\\" *ngIf=\\\"vistaNuevaCuenta\\\">\\n                <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header bg-secondary\\\" >\\n                            Agregar Cuenta Nueva\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\" >\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Nombre Cuenta </label>\\n                                        <input type=\\\"text\\\" placeholder=\\\"CUENTA A NOMBRE DE: \\\" [(ngModel)]=\\\"nombreCuenta\\\" class=\\\"form-control\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Numero Cuenta </label>\\n                                        <input type=\\\"text\\\" placeholder=\\\"Numero de cuenta: \\\" [(ngModel)]=\\\"numeroCuenta\\\" class=\\\"form-control\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Saldo </label>\\n                                        <input type=\\\"number\\\" placeholder=\\\"Saldo de la cuenta: \\\" [(ngModel)]=\\\"saldoCuenta\\\" class=\\\"form-control\\\" required />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-12\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> <br></label><br>\\n                                        <button class=\\\"btn btn-primary\\\" (click)=\\\"agregarNuevaCuenta();\\\">Guardar</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".label-form {\\n  font-weight: bold !important; }\\n\\ndiv#sugerencias {\\n  width: 100%;\\n  background: #fff;\\n  border: 1px solid #ddd;\\n  font-size: 12px;\\n  max-height: 100px;\\n  overflow-y: auto;\\n  padding: 10px;\\n  z-index: 1; }\\n\\n#sugerencias th {\\n  font-size: 16;\\n  margin-bottom: 3px; }\\n\\n.activeLink {\\n  cursor: pointer; }\\n\\n.activeLink:hover {\\n  opacity: .7; }\\n\\n#sugerencias td {\\n  padding: 5px; }\\n\\n.panel {\\n  border: 1px solid #ddd;\\n  padding: 20px; }\\n\\n.card-header {\\n  color: #fff !important; }\\n\\n.example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%; }\\n\\n.example-full-width {\\n  width: 100%; }\\n\\n.btn-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.btn-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.btn-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n.btn-info:focus, .btn-info:hover, .btn-info.focus {\\n  color: #fff;\\n  background-color: #396B57 !important;\\n  border-color: #174935; }\\n\\n.btn-primary:focus, .btn-primary:hover, .btn-primary.focus {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning:focus, .btn-warning:hover, .btn-warning.focus {\\n  color: #fff;\\n  background-color: #2D6E00 !important;\\n  border-color: #0a2a1c; }\\n\\n.btn-danger:focus, .btn-danger:hover, .btn-danger.focus {\\n  color: #fff;\\n  background-color: #7F4700 !important;\\n  border-color: #623900; }\\n\\n.btn-secondary:focus, .btn-secondary:hover, .btn-secondary.focus {\\n  color: #fff;\\n  background-color: #2D3854 !important;\\n  border-color: #0c0d35; }\\n\\n.bg-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.bg-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.bg-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.bg-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.bg-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\"","import { Component, OnInit ,Output , EventEmitter , ViewChild} from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { CatalogosService } from '../../../shared/services/catalogos.service';\nimport { VentasService } from '../../../shared/services/ventas.service';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport swal from 'sweetalert2';\nimport * as moment from 'moment';\n@Component({\n    selector: 'app-catalogo-cuentas',\n    templateUrl: './catalogo-cuentas.component.html',\n    styleUrls: ['./catalogo-cuentas.component.scss'],\n    animations: [routerTransition()],\n    providers: [CatalogosService, VentasService]\n})\n\nexport class CatalogoCuentasComponent implements OnInit {\n    @ViewChild('datatableCuentas')datatableCuentas;\n    cuentasEspeciales;datosCuentasEspeciales;vistaNuevaCuenta;datosOriginalesCuentas;vistaCentro;\n    nombreCuenta;numeroCuenta;saldoCuenta;\n    @Output() public nuevaOperacion = new EventEmitter();\n    constructor(private catalogosService : CatalogosService, private ventasService: VentasService) {\n        this._obtenerCuentasEspeciales();\n        this.vistaNuevaCuenta = false;\n        this.saldoCuenta = 0;\n        this.obtenerCuentasActivas();\n    }\n    _obtenerCuentasEspeciales(){\n        this.catalogosService.obtenerCuentasEspeciales().then(res =>{\n            this.datosOriginalesCuentas =  res['Data'];\n            let nombresCuentas = [];\n            this.datosOriginalesCuentas.forEach(da=>{\n                nombresCuentas.push(`${da.Nombre}-${da.Numero}`);\n            });\n            this.cuentasEspeciales =  nombresCuentas;\n            this.datosOriginalesCuentas =  this.datosOriginalesCuentas;\n            this.datosCuentasEspeciales = {Opciones: {Eliminar: true} ,Datos:this.datosOriginalesCuentas};\n            if(this.datatableCuentas != null){\n                this.datatableCuentas._reiniciarRegistros(this.datosCuentasEspeciales);\n            }\n            \n        }).catch(err=>{console.log('err',err);});\n    }\n    ngOnInit() {}\n    filtrarFuentes = (text$: Observable<string>) =>\n    text$.pipe( debounceTime(200), distinctUntilChanged(),\n      map(term => term === ''?[]:this.cuentasEspeciales.filter(ob => ob.toUpperCase().indexOf(term.toUpperCase()) > -1))\n    );\n    obtenerCuentasActivas(){\n        this._limpiarPantallas();\n        this.catalogosService.obtenerCuentasEspeciales().then(res =>{\n            this.vistaCentro = true;\n            let datosRestantes = res['Data'].filter(da=> da.Activa == 1);\n            console.log('dats',datosRestantes);\n            this.datosCuentasEspeciales = {Opciones: {Desactivar: true, Editar:true} ,Datos:datosRestantes};\n            if(this.datatableCuentas != null){\n                this.datatableCuentas._reiniciarRegistros(this.datosCuentasEspeciales);\n            }                        \n        }).catch(err=>{console.log('err',err);});\n    }\n    obtenerCuentasInactivas(){\n        this._limpiarPantallas();\n        this._delay(100).then(res=>{\n            this.vistaCentro = true;\n            console.log('dats',this.datosOriginalesCuentas);\n            let datosRestantes = this.datosOriginalesCuentas.filter(da=> da.Activa == 0);\n            console.log('dats',datosRestantes);\n            if(!datosRestantes[0]){datosRestantes.push({Resultados: 'No Hay resultados disponibles'});}\n            this.datosCuentasEspeciales = {Opciones: {Activar:true,Eliminar: true} ,Datos:datosRestantes};\n            if(this.datatableCuentas != null){\n                this.datatableCuentas._reiniciarRegistros(this.datosCuentasEspeciales);\n            }\n        });\n    }\n    nuevaCuenta(){\n        this._limpiarPantallas();\n        this._delay(100).then(res=>{\n            this.vistaCentro = true;\n            this.vistaNuevaCuenta = true;\n        });\n    }\n    agregarNuevaCuenta(){\n        let datosNuevaCuenta = {Nombre: this.nombreCuenta, Numero:this.numeroCuenta, Saldo:this.saldoCuenta};\n        console.log('datos cuenta',datosNuevaCuenta);\n        //return true;\n        this.catalogosService.guardarNuevaCuenta(datosNuevaCuenta).then(res=>{\n            console.log('res',res);\n            swal('Exito','La cuenta fue guardada correctamente', 'success');\n            this._obtenerCuentasEspeciales();\n            this.obtenerCuentasActivas();\n        }).catch(err=>{console.log('err',err);});\n    }\n    desactivarCuentaEspecial(obj){\n        let datos_update = {Activa: '0', IdCuenta: obj.IdCuenta};\n        this.catalogosService.actualizarCuentaEspecial(datos_update).then(res=>{\n            this._obtenerCuentasEspeciales();\n            this.obtenerCuentasActivas();\n        }).catch(err=>{console.log('err',err);});\n    }\n    editarElemento(mov){\n        console.log('obj',mov);\n        let datos_update = {IdCuenta: mov['Obj'].IdCuenta, Nombre: mov['Nombre'], Numero: mov['Numero'], Saldo: mov['Saldo']};\n        this.catalogosService.actualizarCuentaEspecial(datos_update).then(res=>{\n            this._obtenerCuentasEspeciales();\n            this.obtenerCuentasActivas();\n        }).catch(err=>{console.log('err',err);});\n    }\n    activarCuentaEspecial(obj){\n        let datos_update = {Activa: '1', IdCuenta: obj.IdCuenta};\n        console.log('datos',datos_update);\n        this.catalogosService.actualizarCuentaEspecial(datos_update).then(res=>{\n            this._obtenerCuentasEspeciales();\n            this.obtenerCuentasInactivas();\n        }).catch(err=>{console.log('err',err);});\n    }\n    borrarCuentaEspecial(obj){\n        this.catalogosService.borrarCuentaEspecial(obj).then(res=>{\n            this._obtenerCuentasEspeciales();\n        }).catch(err=>{console.log('err',err);});\n    }\n    _limpiarPantallas(){\n        this.vistaCentro = this.cuentasEspeciales = this.datosCuentasEspeciales = this.vistaNuevaCuenta = false;\n    }\n    _delay(ms){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n    _confirmarModal(datos, datosAlert){\n        return new Promise ((resolve,reject)=>{\n          swal({ title: datosAlert.Titulo,\n            html: `<p class=\"\">${datosAlert.Contenido}</p>`,\n            type: datosAlert.Tipo,\n            showCancelButton: true,\n            cancelButtonColor:'#D33',\n            confirmButtonText: datosAlert.Confirm\n          }).then((result)=>{\n            if(result.value){\n              return resolve(true);\n            }\n          }).catch((err)=>{\n            return reject(false);\n          });\n        });\n      }\n}\n","module.exports = \"<div class=\\\"col-lg-12\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-lg-12 col-xl-12\\\">\\n            <div class=\\\"row\\\">\\n                <!--Tipos de reportes-->\\n<!--                <div class=\\\"col-xs-4 col-lg-4 col-xl-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Reportes disponibles</label>\\n                        <select class=\\\"form-control\\\" id=\\\"select-bancos\\\" [(ngModel)]=\\\"idReporte\\\">\\n                            <option value=\\\"0\\\">Selecciona un reporte</option>\\n                            <option value=\\\"1\\\">Reporte de Ventas</option>\\n                            <option value=\\\"2\\\">Reporte de Gastos</option>\\n                            <option value=\\\"3\\\">Reporte de nomina</option>\\n                            <option value=\\\"4\\\">Reporte de documentos</option>\\n                        </select>\\n                    </div>\\n                </div>-->\\n                <!--fecha inicio-->\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Fecha Inicio</label>\\n                        <input type=\\\"date\\\" [(ngModel)]=\\\"fInicio\\\" class=\\\"form-control\\\" />\\n                    </div>\\n                </div>\\n                <!--fecha fin-->\\n                <div class=\\\"col-lg-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Fecha Fin</label>\\n                        <input type=\\\"date\\\" [(ngModel)]=\\\"fFin\\\" class=\\\"form-control\\\" />\\n                        <span class=\\\"text-danger\\\" *ngIf=\\\"errorFecha\\\">Fecha Fin no puede ser menor a Fecha Inicio</span>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4 pull-right\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label><br></label><br>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-labeled btn-primary pull-right buscar-mov\\\" (click)=\\\"generarReporte()\\\">\\n                            <span class=\\\"btn-label btn-label-left \\\"><i class=\\\"fa fa-search \\\"></i></span> | Generar\\n                        </button>\\n                    </div>\\n                </div>\\n                <!--Cuentas-->\\n <!--               <div class=\\\"col-lg-3\\\" *ngIf=\\\"this.resultadoReporte\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Cuentas</label>\\n                        <select [(ngModel)]=\\\"cuenta\\\" class=\\\"form-control\\\" (change)=\\\"filtrarVentas();\\\">\\n                            <option value=\\\"0\\\">Filtrar por cuenta</option>\\n                            <option *ngFor=\\\"let cue of cuentas\\\" value=\\\"{{cue.IdCuenta}}\\\">{{cue.Nombre}}</option>\\n                        </select>\\n                    </div>\\n                </div>-->\\n                <!--Usuarios-->\\n<!--                <div class=\\\"col-lg-3\\\" *ngIf=\\\"this.resultadoReporte\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label>Usuarios</label>\\n                        <select [(ngModel)]=\\\"usuario\\\" class=\\\"form-control\\\" (change)=\\\"filtrarVentas();\\\">\\n                            <option value=\\\"0\\\">Filtrar por usuario</option>\\n                            <option *ngFor=\\\"let usu of catalogoUsuarios\\\" value=\\\"{{usu.IdUsuario}}\\\">{{usu.Nombre}}</option>\\n                        </select>\\n                    </div>\\n                </div>-->\\n                <!--Buscar reporte-->\\n<!--                <div class=\\\"col-lg-10\\\"></div>\\n                <div class=\\\"col-lg-2 pull-right\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label><br></label><br>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-labeled btn-primary pull-right buscar-mov\\\" (click)=\\\"generarReporte()\\\">\\n                            <span class=\\\"btn-label btn-label-left \\\"><i class=\\\"fa fa-search \\\"></i></span> | Generar\\n                        </button>\\n                    </div>\\n                </div>-->\\n            </div>\\n        </div>\\n    </div>\\n    <!--<div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3\\\">\\n            <label> Filtro 1</label><br>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"\\\">\\n                <span class=\\\"slider round\\\"></span>\\n            </label>\\n        </div>\\n    </div>-->\\n    <!--Filtros extra-->\\n    <div class=\\\"row\\\" *ngIf=\\\"this.resultadosIngresos\\\">\\n        <div class=\\\"col-lg-12\\\"><h4>Mostrar desglose por </h4></div>\\n        <div class=\\\"col-lg-2\\\">\\n            <label>Conceptos</label><br>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"filtroConceptos\\\">\\n                <span class=\\\"slider round\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-lg-2\\\">\\n            <label>Forma de Pago </label><br>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\" [(ngModel)]=\\\"filtroFormas\\\">\\n                <span class=\\\"slider round\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-lg-2\\\">\\n            <label>Estado Resultados </label><br>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\" (change)=\\\"recalcularResultados();\\\" [(ngModel)]=\\\"filtroEstadoResultado\\\">\\n                <span class=\\\"slider round\\\"></span>\\n            </label>\\n        </div>\\n<!--        <div class=\\\"col-lg-2\\\">\\n            <label>cuentas</label><br>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\" (change)=\\\"mostrarDetalles();\\\" [(ngModel)]=\\\"filtroCuentas\\\">\\n                <span class=\\\"slider round\\\"></span>\\n            </label>\\n        </div>-->\\n        <div class=\\\"col-lg-2\\\">\\n            <label>Datos en tabla</label><br>\\n            <label class=\\\"switch\\\">\\n                <input type=\\\"checkbox\\\"  [(ngModel)]=\\\"filtroDatosTabla\\\">\\n                <span class=\\\"slider round\\\"></span>\\n            </label>\\n        </div>\\n        <div class=\\\"col-lg-12\\\"><br><br></div>\\n    </div>    \\n    <!--Estado de resultados -->\\n    <div class=\\\"row\\\" *ngIf=\\\"this.resultadosIngresos && filtroEstadoResultado\\\">\\n        <div class=\\\"col-lg-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-warning\\\">\\n                        <button class=\\\"btn btn-primary pull-right\\\" (click)=\\\"confirmarGuardarEstadoResultados();\\\"><i class=\\\"fa fa-save\\\"></i> | Guardar </button>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-3\\\">\\n                            <h4>Cuentas </h4>\\n                            <ul>\\n                                <li class=\\\"tg-list-item\\\" *ngFor=\\\"let c of cuentas;let i = index\\\">\\n                                    <b>{{c.Nombre}} : $ {{c.Saldo | number}}</b>\\n                                    <input class=\\\"tgl tgl-flat\\\" id=\\\"IND-{{i}}\\\" type=\\\"checkbox\\\" (change)=\\\"recalcularResultados();\\\" [(ngModel)]=\\\"c.Active\\\" />\\n                                    <label class=\\\"tgl-btn\\\" for=\\\"IND-{{i}}\\\"></label>\\n                                </li>\\n                            </ul>\\n                        </div>\\n                        <div class=\\\"col-lg-9\\\" >\\n                            <h4> Detalles </h4>\\n                            <div class=\\\"card mb-3\\\">\\n                                <div class=\\\"card-header bg-info\\\">\\n                                    Resultado \\n                                </div> \\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-lg-3 text-primary\\\"> Saldo Cuentas: $ {{ saldoTotalCuentas | number}} </div>\\n                                        <div class=\\\"col-lg-3 text-success\\\"> + Ingresos: $ {{ totalIngresos | number}} </div>\\n                                        <div class=\\\"col-lg-3 text-danger\\\"> - Gastos: $ {{ totalGastos | number}} </div>\\n                                        <div class=\\\"col-lg-3 text-info\\\"> Saldo Final: $ {{saldoTotalCuentas+totalIngresos-totalGastos  | number}}</div>\\n                                        <div class=\\\"col-lg-12\\\">\\n                                            <table class=\\\"table table-stripped table-hover\\\">\\n                                                <tr><th>Saldo Cuentas</th><th>Ingresos</th> <th>Egresos</th> <th>Restante</th> </tr>\\n                                                <tr><td>$ {{saldoTotalCuentas | number}} </td> <td>Todos: {{this.totalIngresos | number}}</td><td> Todos: {{this.totalGastos | number}} </td><td>Resultado : {{this.totalIngresos-this.totalGastos | number}}</td></tr>\\n<!--                                                <tr><td></td> \\n                                                    <td>\\n                                                        <ul>\\n                                                            <li class=\\\"tg-list-item\\\">\\n                                                                Ver detalle\\n                                                                <input class=\\\"tgl tgl-flat\\\" id=\\\"verIngresos\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"verDetalleIngresos\\\" />\\n                                                                <label class=\\\"tgl-btn\\\" for=\\\"verIngresos\\\"></label>\\n                                                            </li>\\n                                                        </ul>\\n                                                    </td>\\n                                                    <td>\\n                                                        <ul>\\n                                                            Ver detalle\\n                                                            <li class=\\\"tg-list-item\\\">\\n                                                                <input class=\\\"tgl tgl-flat\\\" id=\\\"verGastos\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"verDetalleGastos\\\" />\\n                                                                <label class=\\\"tgl-btn\\\" for=\\\"verGastos\\\"></label>\\n                                                            </li>\\n                                                        </ul>\\n                                                    </td>\\n                                                    <td></td>\\n                                                </tr>-->\\n                                                <!--<tr><td>Todos Por {{this.labelIngresos }}: {{this.totalIngresosDetalle | number}}</td><td> Todos: {{this.labelGastos}} {{this.totalGastosDetalle | number}} </td><td>Resultado Por Tipo : {{this.totalIngresosDetalle -this.totalGastosDetalle | number}}</td></tr>-->\\n                                                <!--<tr *ngIf=\\\"totalIngresosDetalle2 && totalGastosDetalle2\\\"><td>Todos Por {{this.labelIngresos2 }}: {{this.totalIngresosDetalle2 | number}}</td><td> Todos: {{this.labelGastos2}} {{this.totalGastosDetalle2 | number}} </td><td>Resultado Por Pago : {{this.totalIngresosDetalle2 -this.totalGastosDetalle2 | number}}</td></tr>-->\\n                                            </table>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>        \\n    <!--Resultado de reportes-->\\n    <div class=\\\"row\\\" *ngIf=\\\"this.resultadosIngresos && filtroDatosTabla \\\">\\n        <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-success\\\">\\n                    Ingresos  <b>Total Ingresos ${{totalIngresos | number}}</b>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <app-datatables-general #datatableIngresos *ngIf=\\\"this.resultadosIngresos\\\" [datosDatatable]=\\\"this.resultadosIngresos\\\"></app-datatables-general>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-danger\\\">\\n                    Gastos  <b>Total Gastos $ {{totalGastos | number}}</b>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <app-datatables-general #datatableGastos *ngIf=\\\"this.resultadosGastos\\\" [datosDatatable]=\\\"this.resultadosGastos\\\"></app-datatables-general>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n        <!--Reportes Utilidad-->\\n<!--        <div class=\\\"row\\\"  *ngIf=\\\"this.resultadosIngresos && filtroEstadoResultado\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"row\\\" >\\n                    <div class=\\\"col-xs-8\\\"> \\n                        <div class=\\\"panel panel-primary\\\">\\n                            <div class=\\\"panel-heading\\\"><h4>Desglose por cuentas</h4></div>\\n                            <div class=\\\"panel-body\\\">\\n                                <table class=\\\"table table-striped table-hover\\\">\\n                                    <tr><th>Folio de promocion</th><th>Marca</th><th># Partidas</th><th>Monto Acumumulado</th><th>Detalles</th><th>Calcular Utilidad</th></tr>\\n                                    <tr *ngFor=\\\"let d of datosUtilidad.Datos\\\">\\n                                        <td>{{d.Folio}}</td>\\n                                        <td>{{d.Marca}}</td>\\n                                        <td>{{d.Partidas.length}}</td>\\n                                        <td>{{d.TotalAcumulado</td>\\n                                        <td><button class=\\\"btn btn-warning\\\" (click)=\\\"detallePromocion(d);\\\"><i class=\\\"fa fa-info-circle\\\"></i></button></td>\\n                                        <td><button class=\\\"btn btn-success\\\" (click)=\\\"verResultadosUtilidad(d);\\\"><i class=\\\"fa fa-arrow-circle-right\\\"></i></button></td>\\n                                    </tr>\\n                                </table>\\n                            </div>\\n                        </div>      \\n                    </div>\\n                    <div class=\\\"col-xs-4\\\">\\n                        <p class=\\\"text-center\\\">\\n                            <strong>Resumen de ventas</strong>\\n                        </p>\\n                        <div class=\\\"progress-group\\\" *ngFor=\\\"let c of cuentas\\\">\\n                            <span class=\\\"progress-text\\\">Saldo de {{c.Nombre}} con </span>\\n                            <span class=\\\"progress-number\\\"> {{c.Saldo}}</span>\\n                            <div class=\\\"progress sm\\\">\\n                            <div class=\\\"progress-bar progress-bar-red\\\" style=\\\"width: 80%\\\"></div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"progress-group\\\">\\n                            <span class=\\\"progress-text\\\">Total Precio Venta</span>\\n                            <span class=\\\"progress-number\\\"><b>0</b>{{totalPrecioProm}}}</span>\\n                            <div class=\\\"progress sm\\\">\\n                                <div class=\\\"progress-bar progress-bar-aqua\\\" style=\\\"width: 80%\\\"></div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"progress-group\\\">\\n                            <span class=\\\"progress-text\\\">Total de Apoyos Marca</span>\\n                            <span class=\\\"progress-number\\\"><b>0</b>{{totalApoyosProm}}}</span>\\n                            <div class=\\\"progress sm\\\">\\n                                <div class=\\\"progress-bar progress-bar-yellow\\\" style=\\\"width: 80%\\\"></div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"progress-group\\\">\\n                            <span class=\\\"progress-text\\\">Utilidad Aprox</span>\\n                            <span class=\\\"progress-number\\\"><b>0</b>{{totalUtilidadBruta}}}</span>\\n                            <div class=\\\"progress sm\\\">\\n                                <div class=\\\"progress-bar progress-bar-green\\\" style=\\\"width: 80%\\\"></div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>       --> \\n    <!--Ingresos Por Concepto [@routerTransition]-->\\n    <div class=\\\"row\\\" *ngIf=\\\"this.resultadosIngresos && filtroConceptos\\\" >\\n        <div class=\\\"col-lg-12\\\"><h4>Detalles de ingresos</h4></div>\\n        <div class=\\\"col-lg-6\\\" >\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-success\\\">\\n                    {{this.ingresosChart.Nombre}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas baseChart height=\\\"150px\\\" [data]=\\\"ingresosChart.DatosContenido\\\" \\n                    [labels]=\\\"ingresosChart.DatosEtiqueta\\\" [chartType]=\\\"ingresosChart.Tipo\\\" \\n                    (chartHover)=\\\"chartHovered($event,ingresosChart.Datos)\\\" \\n                    (chartClick)=\\\"chartIngresosClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\" *ngIf=\\\"this.resultadosIngresosDetalle\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-success\\\">\\n                    Datos {{this.ingresosChart.Nombre}} {{(labelIngresos)?labelIngresos:'Todos'}} Total: $ {{this.totalIngresosDetalle | number}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <app-datatables-general #datatableIngresosDetalle *ngIf=\\\"this.resultadosIngresosDetalle\\\" [datosDatatable]=\\\"this.resultadosIngresosDetalle\\\"></app-datatables-general>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Gastos Por Concepto-->\\n    <div class=\\\"row\\\" *ngIf=\\\"this.resultadosGastos && filtroConceptos\\\" >\\n        <div class=\\\"col-lg-12\\\"><h4>Detalles de Gastos</h4></div>\\n        <div class=\\\"col-lg-6\\\" >\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-danger\\\">\\n                    {{this.gastosChart.Nombre}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <canvas baseChart height=\\\"150px\\\" [data]=\\\"gastosChart.DatosContenido\\\" \\n                    [labels]=\\\"gastosChart.DatosEtiqueta\\\" [chartType]=\\\"gastosChart.Tipo\\\" \\n                    (chartHover)=\\\"chartHovered($event,gastosChart.Datos)\\\" \\n                    (chartClick)=\\\"chartGastosClicked($event)\\\">\\n                    </canvas>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-6\\\" *ngIf=\\\"this.resultadosGastosDetalle\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <div class=\\\"card-header bg-danger\\\">\\n                    Datos {{this.gastosChart.Nombre}} {{(labelGastos)?labelGastos:'Todos'}} Total: $ {{this.totalGastosDetalle | number}}\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <app-datatables-general #datatableGastosDetalle *ngIf=\\\"this.resultadosGastosDetalle\\\" [datosDatatable]=\\\"this.resultadosGastosDetalle\\\"></app-datatables-general>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <!--Ingresos Por Forma de pago-->\\n    <div class=\\\"row\\\" *ngIf=\\\"this.resultadosIngresos && filtroFormas\\\" >\\n            <div class=\\\"col-lg-12\\\"><h4>Detalles de ingresos</h4></div>\\n            <div class=\\\"col-lg-6\\\" >\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-header bg-success\\\">\\n                        {{this.ingresosChart2.Nombre}}\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <canvas baseChart height=\\\"150px\\\" [data]=\\\"ingresosChart2.DatosContenido\\\" \\n                        [labels]=\\\"ingresosChart2.DatosEtiqueta\\\" [chartType]=\\\"ingresosChart2.Tipo\\\" \\n                        (chartHover)=\\\"chartHovered($event,ingresosChart2.Datos)\\\" \\n                        (chartClick)=\\\"chartIngresosClicked2($event)\\\">\\n                        </canvas>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"this.resultadosIngresosDetalle2\\\">\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-header bg-success\\\">\\n                        Datos {{this.ingresosChart2.Nombre}} {{(labelIngresos2)?labelIngresos2:'Todos'}} Total: $ {{this.totalIngresosDetalle2 | number}}\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <app-datatables-general #datatableIngresosDetalle2 *ngIf=\\\"this.resultadosIngresosDetalle2\\\" [datosDatatable]=\\\"this.resultadosIngresosDetalle2\\\"></app-datatables-general>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <!--Gastos Por Concepto-->\\n        <div class=\\\"row\\\" *ngIf=\\\"this.resultadosGastos && filtroFormas\\\" >\\n            <div class=\\\"col-lg-12\\\"><h4>Detalles de Gastos</h4></div>\\n            <div class=\\\"col-lg-6\\\" >\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-header bg-danger\\\">\\n                        {{this.gastosChart2.Nombre}}\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <canvas baseChart height=\\\"150px\\\" [data]=\\\"gastosChart2.DatosContenido\\\" \\n                        [labels]=\\\"gastosChart2.DatosEtiqueta\\\" [chartType]=\\\"gastosChart2.Tipo\\\" \\n                        (chartHover)=\\\"chartHovered($event,gastosChart2.Datos)\\\" \\n                        (chartClick)=\\\"chartGastosClicked2($event)\\\">\\n                        </canvas>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"this.resultadosGastosDetalle2\\\">\\n                <div class=\\\"card mb-3\\\">\\n                    <div class=\\\"card-header bg-danger\\\">\\n                        Datos {{this.gastosChart2.Nombre}} {{(labelGastos2)?labelGastos2:'Todos'}} Total: $ {{this.totalGastosDetalle2 | number}}\\n                    </div>\\n                    <div class=\\\"card-body\\\">\\n                        <app-datatables-general #datatableGastosDetalle2 *ngIf=\\\"this.resultadosGastosDetalle2\\\" [datosDatatable]=\\\"this.resultadosGastosDetalle2\\\"></app-datatables-general>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n</div>\\n\"","module.exports = \".btn-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-success {\\n  color: #fff; }\\n\\n.btn-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.btn-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.btn-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n.btn-info:focus, .btn-info:hover, .btn-info.focus {\\n  color: #fff;\\n  background-color: #396B57 !important;\\n  border-color: #174935; }\\n\\n.btn-primary:focus, .btn-primary:hover, .btn-primary.focus {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning:focus, .btn-warning:hover, .btn-warning.focus {\\n  color: #fff;\\n  background-color: #2D6E00 !important;\\n  border-color: #0a2a1c; }\\n\\n.btn-danger:focus, .btn-danger:hover, .btn-danger.focus {\\n  color: #fff;\\n  background-color: #7F4700 !important;\\n  border-color: #623900; }\\n\\n.btn-secondary:focus, .btn-secondary:hover, .btn-secondary.focus {\\n  color: #fff;\\n  background-color: #2D3854 !important;\\n  border-color: #0c0d35; }\\n\\n.bg-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.bg-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.bg-success {\\n  color: #fff; }\\n\\n.bg-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.bg-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.bg-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n/* The switch - the box around the slider */\\n\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px; }\\n\\n/* Hide default HTML checkbox */\\n\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0; }\\n\\n/* The slider */\\n\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: .4s; }\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: white;\\n  transition: .4s; }\\n\\ninput:checked + .slider {\\n  background-color: #2196F3; }\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3; }\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(26px);\\n  transform: translateX(26px); }\\n\\n/* Rounded sliders */\\n\\n.slider.round {\\n  border-radius: 34px; }\\n\\n.slider.round:before {\\n  border-radius: 50%; }\\n\\nhtml,\\nbody {\\n  display: flex;\\n  min-height: 100%;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  font-family: sans-serif; }\\n\\nul,\\nli {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0; }\\n\\n.tg-list {\\n  text-align: center;\\n  display: flex;\\n  align-items: center; }\\n\\n.tg-list-item {\\n  margin: 0 2em; }\\n\\nh2 {\\n  color: #777; }\\n\\nh4 {\\n  color: #999; }\\n\\n.tgl {\\n  display: none; }\\n\\n.tgl, .tgl:after, .tgl:before,\\n  .tgl *,\\n  .tgl *:after,\\n  .tgl *:before,\\n  .tgl + .tgl-btn {\\n    box-sizing: border-box; }\\n\\n.tgl::-moz-selection, .tgl:after::-moz-selection, .tgl:before::-moz-selection,\\n    .tgl *::-moz-selection,\\n    .tgl *:after::-moz-selection,\\n    .tgl *:before::-moz-selection,\\n    .tgl + .tgl-btn::-moz-selection {\\n      background: none; }\\n\\n.tgl::selection, .tgl:after::selection, .tgl:before::selection,\\n    .tgl *::selection,\\n    .tgl *:after::selection,\\n    .tgl *:before::selection,\\n    .tgl + .tgl-btn::selection {\\n      background: none; }\\n\\n.tgl + .tgl-btn {\\n    outline: 0;\\n    display: block;\\n    width: 4em;\\n    height: 2em;\\n    position: relative;\\n    cursor: pointer;\\n    -webkit-user-select: none;\\n       -moz-user-select: none;\\n        -ms-user-select: none;\\n            user-select: none; }\\n\\n.tgl + .tgl-btn:after, .tgl + .tgl-btn:before {\\n      position: relative;\\n      display: block;\\n      content: \\\"\\\";\\n      width: 50%;\\n      height: 100%; }\\n\\n.tgl + .tgl-btn:after {\\n      left: 0; }\\n\\n.tgl + .tgl-btn:before {\\n      display: none; }\\n\\n.tgl:checked + .tgl-btn:after {\\n    left: 50%; }\\n\\n.tgl-light + .tgl-btn {\\n  background: #f0f0f0;\\n  border-radius: 2em;\\n  padding: 2px;\\n  transition: all .4s ease; }\\n\\n.tgl-light + .tgl-btn:after {\\n    border-radius: 50%;\\n    background: #fff;\\n    transition: all .2s ease; }\\n\\n.tgl-light:checked + .tgl-btn {\\n  background: #9FD6AE; }\\n\\n.tgl-ios + .tgl-btn {\\n  background: #fbfbfb;\\n  border-radius: 2em;\\n  padding: 2px;\\n  transition: all .4s ease;\\n  border: 1px solid #e8eae9; }\\n\\n.tgl-ios + .tgl-btn:after {\\n    border-radius: 2em;\\n    background: #fbfbfb;\\n    transition: left 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275), padding 0.3s ease, margin 0.3s ease;\\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 0 rgba(0, 0, 0, 0.08); }\\n\\n.tgl-ios + .tgl-btn:hover:after {\\n    will-change: padding; }\\n\\n.tgl-ios + .tgl-btn:active {\\n    box-shadow: inset 0 0 0 2em #e8eae9; }\\n\\n.tgl-ios + .tgl-btn:active:after {\\n      padding-right: .8em; }\\n\\n.tgl-ios:checked + .tgl-btn {\\n  background: #86d993; }\\n\\n.tgl-ios:checked + .tgl-btn:active {\\n    box-shadow: none; }\\n\\n.tgl-ios:checked + .tgl-btn:active:after {\\n      margin-left: -.8em; }\\n\\n.tgl-skewed + .tgl-btn {\\n  overflow: hidden;\\n  -webkit-transform: skew(-10deg);\\n          transform: skew(-10deg);\\n  -webkit-backface-visibility: hidden;\\n          backface-visibility: hidden;\\n  transition: all .2s ease;\\n  font-family: sans-serif;\\n  background: #888; }\\n\\n.tgl-skewed + .tgl-btn:after, .tgl-skewed + .tgl-btn:before {\\n    -webkit-transform: skew(10deg);\\n            transform: skew(10deg);\\n    display: inline-block;\\n    transition: all .2s ease;\\n    width: 100%;\\n    text-align: center;\\n    position: absolute;\\n    line-height: 2em;\\n    font-weight: bold;\\n    color: #fff;\\n    text-shadow: 0 1px 0 rgba(0, 0, 0, 0.4); }\\n\\n.tgl-skewed + .tgl-btn:after {\\n    left: 100%;\\n    content: attr(data-tg-on); }\\n\\n.tgl-skewed + .tgl-btn:before {\\n    left: 0;\\n    content: attr(data-tg-off); }\\n\\n.tgl-skewed + .tgl-btn:active {\\n    background: #888; }\\n\\n.tgl-skewed + .tgl-btn:active:before {\\n      left: -10%; }\\n\\n.tgl-skewed:checked + .tgl-btn {\\n  background: #86d993; }\\n\\n.tgl-skewed:checked + .tgl-btn:before {\\n    left: -100%; }\\n\\n.tgl-skewed:checked + .tgl-btn:after {\\n    left: 0; }\\n\\n.tgl-skewed:checked + .tgl-btn:active:after {\\n    left: 10%; }\\n\\n.tgl-flat + .tgl-btn {\\n  padding: 2px;\\n  transition: all .2s ease;\\n  background: #fff;\\n  border: 4px solid #f2f2f2;\\n  border-radius: 2em; }\\n\\n.tgl-flat + .tgl-btn:after {\\n    transition: all .2s ease;\\n    background: #f2f2f2;\\n    content: \\\"\\\";\\n    border-radius: 1em; }\\n\\n.tgl-flat:checked + .tgl-btn {\\n  border: 4px solid #7FC6A6; }\\n\\n.tgl-flat:checked + .tgl-btn:after {\\n    left: 50%;\\n    background: #7FC6A6; }\\n\\n.tgl-flip + .tgl-btn {\\n  padding: 2px;\\n  transition: all .2s ease;\\n  font-family: sans-serif;\\n  -webkit-perspective: 100px;\\n          perspective: 100px; }\\n\\n.tgl-flip + .tgl-btn:after, .tgl-flip + .tgl-btn:before {\\n    display: inline-block;\\n    transition: all .4s ease;\\n    width: 100%;\\n    text-align: center;\\n    position: absolute;\\n    line-height: 2em;\\n    font-weight: bold;\\n    color: #fff;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n    border-radius: 4px; }\\n\\n.tgl-flip + .tgl-btn:after {\\n    content: attr(data-tg-on);\\n    background: #02C66F;\\n    -webkit-transform: rotateY(-180deg);\\n            transform: rotateY(-180deg); }\\n\\n.tgl-flip + .tgl-btn:before {\\n    background: #FF3A19;\\n    content: attr(data-tg-off); }\\n\\n.tgl-flip + .tgl-btn:active:before {\\n    -webkit-transform: rotateY(-20deg);\\n            transform: rotateY(-20deg); }\\n\\n.tgl-flip:checked + .tgl-btn:before {\\n  -webkit-transform: rotateY(180deg);\\n          transform: rotateY(180deg); }\\n\\n.tgl-flip:checked + .tgl-btn:after {\\n  -webkit-transform: rotateY(0);\\n          transform: rotateY(0);\\n  left: 0;\\n  background: #7FC6A6; }\\n\\n.tgl-flip:checked + .tgl-btn:active:after {\\n  -webkit-transform: rotateY(20deg);\\n          transform: rotateY(20deg); }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../../router.animations';\nimport { EstadisticasService } from '../../../shared/services/estadisticas.service'\nimport { CatalogosService } from '../../../shared/services/catalogos.service'\nimport * as moment  from 'moment';\nimport * as _ from 'lodash';\nimport swal from 'sweetalert2';\n@Component({\n    selector: 'app-estado-financiero',\n    templateUrl: './estado-financiero.component.html',\n    styleUrls: ['./estado-financiero.component.scss'],\n    animations: [routerTransition()],\n    providers: [EstadisticasService, CatalogosService]\n})\n\nexport class EstadoFinancieroComponent implements OnInit {\n    idReporte;fInicio;fFin;resultadoReporte;cuentas;catalogoUsuarios;cuenta;usuario;\n    @ViewChild('datatableIngresos')datatableIngresos;\n    @ViewChild('datatableGastos')datatableGastos;\n    @ViewChild('datatableGastosDetalle')datatableGastosDetalle;\n    @ViewChild('datatableGastosDetalle2')datatableGastosDetalle2;\n    @ViewChild('datatableIngresosDetalle')datatableIngresosDetalle;\n    @ViewChild('datatableIngresosDetalle2')datatableIngresosDetalle2;    \n\n    datosFiltrar;resultadosIngresos;resultadosGastos;\n    totalIngresos;totalGastos;\n    pagosIngresos;pagosGastos;tiposIngresos;tiposGastos;\n    gastosChart;gastosTodos;ingresosTodos;resultadosGastosDetalle;\n    totalGastosDetalle;labelGastos;resultadosIngresosDetalle;totalIngresosDetalle;labelIngresos;\n    ingresosChart;\n    filtroFormas;filtroConceptos;filtroEstadoResultado;filtroCuentas;filtroDatosTabla;\n    ingresosChart2;totalIngresosDetalle2;labelIngresos2;resultadosIngresosDetalle2;\n    gastosChart2;totalGastosDetalle2;labelGastos2;resultadosGastosDetalle2;\n    saldoTotalCuentas;\n    verDetalleIngresos;verDetalleGastos;\nconstructor(private estadisticasService: EstadisticasService, private catalogosService : CatalogosService) {\n    this.idReporte =  this.cuenta = this.usuario = 0;\n    this.filtroFormas = this.filtroConceptos  = this.filtroEstadoResultado = false;\n    this.fFin =  moment(new Date()).format('YYYY-MM-DD');\n//    this.fInicio =  moment(`${moment(new Date()).format('YYYY-')}01-01`).format('YYYY-MM-DD');\n    this.fInicio =  moment(`2018-01-01`).format('YYYY-MM-DD');\n    this._obtenerFuentesGastos();\n    this._obtenerFuentesGastos();\n    this._catalogoUsuarios();\n    this.saldoTotalCuentas = this.verDetalleIngresos = this.verDetalleGastos = 0;\n}\n_catalogoUsuarios(){\n    this.catalogosService.obtenerUsuarios().then(res=>{\n        console.log('res',res);\n        this.catalogoUsuarios =  res['Data'];\n    });\n}\n_obtenerFuentesGastos(){\n    this.catalogosService.obtenerCuentasEspeciales().then(res =>{\n        console.log('res',res);\n        this.cuentas = res['Data'].filter(r=>r.Activa == true);\n        this.cuentas.forEach(c=>{\n            c.Active = true\n        });\n    }).catch(err=>{console.log('err',err);});\n}\n\nfiltrarVentas(){\n    console.log('usuarios',this.usuario);\n    console.log('cuenta',this.cuenta);\n    let restantes =  this.datosFiltrar;\n    console.log('cuenta',restantes);\n    if(this.usuario != 0){\n        restantes =  restantes.filter(ob=>ob.ObjCompleto.IdUsuario == this.usuario);\n    }\n    if(this.cuenta != 0){\n        restantes =  restantes.filter(ob=>ob.ObjCompleto.IdCuenta == this.cuenta);\n    }\n    if(!restantes[0]){\n        restantes = [{Resultados: 'No se encontraron resultados'}]\n    }\n    if(this.datatableIngresos != null){\n        this.datatableIngresos._reiniciarRegistros({Datos:restantes});\n    }\n\n    this.resultadoReporte =  {Datos:restantes};\n\n}\nrecalcularResultados(){\n    let cuentas = this.cuentas.filter(ob=>ob.Active == true);\n    this.saldoTotalCuentas = 0;\n    let str_cuentas = ``;\n    cuentas.forEach(c=>{\n        this.saldoTotalCuentas += c.Saldo;\n        str_cuentas += ` ${c.IdCuenta} , `;\n    });\n    this.totalIngresos = 0;    \n    let ingresos = [];\n    this.ingresosTodos.forEach(i=>{\n        if(str_cuentas.indexOf(i.ObjCompleto.IdCuenta) > -1){\n            this.totalIngresos += i.Total;\n            ingresos.push(i);\n        }\n    })\n    this.totalGastos = 0;\n    let gastos = [];\n    this.gastosTodos.forEach(g=>{\n        if(str_cuentas.indexOf(g.ObjCompleto.IdCuenta) > -1){\n            this.totalGastos += g.Total;\n            gastos.push(g);\n        }\n    })\n    if(this.datatableIngresos != null){\n        this.datatableIngresos._reiniciarRegistros({Datos:(ingresos[0])?ingresos:[{\"-\":`Sin resultados`}]});\n    }\n    this.resultadosIngresos =  {Datos:(ingresos[0])?ingresos:[{\"-\":`Sin resultados`}]};\n\n    if(this.datatableGastos != null){\n        this.datatableGastos._reiniciarRegistros({Datos:(gastos[0])?gastos:[{\"-\":`Sin resultados`}]});   \n    }\n    this.resultadosGastos =  {Datos:(gastos[0])?gastos:[{\"-\":`Sin resultados`}]};\n}\nconfirmarGuardarEstadoResultados(){\n\n}\ngenerarReporte(){\n    this.resultadosIngresos =  this.resultadosGastos = false;\n    let Filtros = {Fecha_inicio: this.fInicio, Fecha_fin: this.fFin};\n    this.estadisticasService.obtenerReporteFinanzas(Filtros).then(res=>{\n        console.log('res',res);\n        if(res['Data']){\n            let ingresosOrdenados = this._ordenarDatosFinanzas(res['Data'].DatosVenta);\n            this.ingresosTodos = ingresosOrdenados;\n            let ingresosProcesados = this._procesarIngresos(ingresosOrdenados);\n            let ingresosProcesados2 = this._procesarIngresos2(ingresosOrdenados);\n            console.log('ingresos 2 ',ingresosProcesados2);\n            this.ingresosChart = this._pieChartOrder(\"Resumen de Ingresos Por Conceptos\",ingresosProcesados);\n            this.ingresosChart2 = this._pieChartOrder(\"Resumen de Ingresos Por FormaPago\",ingresosProcesados2);\n\n\n            let gastosOrdenados = this._ordenarDatosGastos(res['Data'].DatosGastos);\n            this.gastosTodos = gastosOrdenados;\n            let gastosProcesados = this._procesarGastos(gastosOrdenados);\n            let gastosProcesados2 = this._procesarGastos2(gastosOrdenados);\n            this.gastosChart = this._pieChartOrder(\"Resumen de Gastos Por Conceptos\",gastosProcesados);\n            this.gastosChart2 = this._pieChartOrder(\"Resumen de Gastos Por FormaPago\",gastosProcesados2);\n    //        let datosOrdenados = res['Data'];\n    //        this.datosFiltrar =  ingresosOrdenados;\n            if(this.datatableIngresos != null){\n                this.datatableIngresos._reiniciarRegistros({Datos:ingresosOrdenados});\n            }\n            this.resultadosIngresos =  {Datos:ingresosOrdenados};\n\n            //this.datosFiltrar =  gastosOrdenados;\n            if(this.datatableGastos != null){\n                this.datatableGastos._reiniciarRegistros({Datos:gastosOrdenados});   \n            }\n            this.resultadosGastos =  {Datos:gastosOrdenados};\n        }else{\n            swal('Advertencia','No existen datos para esta consulta','warning');\n        }\n    }).catch(err=>{console.log('err',err);});\n}\n_ordenarDatosGastos(datos){\n    let datosOrdenados = [];\n    this.tiposGastos = [];\n     this.pagosGastos = [];\n    this.totalGastos = 0;\n    if(datos[0]){\n        datos.forEach(da=>{\n            let cuenta = this.cuentas.find(c=>c.IdCuenta == da.IdCuenta);\n            datosOrdenados.push({Folio: `${da.Folio_gasto}${da.IdGasto}`, Concepto: da.Concepto, Tipo: da.Tipo, Pago: da.Forma_pago,Cuenta: cuenta.Nombre , Usuario:da.Nombre, Fecha: da.Fecha_gasto, Total:da.Total ,ObjCompleto: da});\n            this.totalGastos += da.Total;\n            let existePago = this.pagosGastos.find(ob=>ob.Pago == da.Forma_pago);\n            if(!existePago){\n                this.pagosGastos.push({Pago: da.Forma_pago});\n            }\n            let existeTipo = this.tiposGastos.find(ob=>ob.Tipo == da.Tipo);\n            if(!existeTipo){\n                this.tiposGastos.push({Tipo: da.Tipo});\n            }\n        });\n    }\n\n    return datosOrdenados;\n}\n_ordenarDatosFinanzas(datos){\n    let datosOrdenados = [];\n    this.tiposIngresos = [];\n     this.pagosIngresos = [];\n    this.totalIngresos = 0;\n    datos.forEach(da=>{\n        let cuenta = this.cuentas.find(c=>c.IdCuenta == da.IdCuenta);\n        datosOrdenados.push({Folio: `${da.Folio_venta}-${da.IdVenta}`, Concepto: da.Concepto, Tipo: da.Tipo_venta, Pago: da.Forma_pago, Cuenta: cuenta.Nombre, Usuario:da.Nombre, Total:da.Importe, Fecha: da.Fecha_venta ,ObjCompleto: da});\n        this.totalIngresos += da.Importe;\n        let existePago = this.pagosIngresos.find(ob=>ob.Pago == da.Forma_pago);\n        if(!existePago){\n            this.pagosIngresos.push({Pago: da.Forma_pago});\n        }\n        let existeTipo = this.tiposIngresos.find(ob=>ob.Tipo == da.Tipo_venta);\n        if(!existeTipo){\n            this.tiposIngresos.push({Tipo: da.Tipo_venta});            \n        }\n    });\n    return datosOrdenados;\n}\n//Click en grafica de gastos\nchartGastosClicked(e){\n    this.labelGastos = this._interpreteEventoClicked(e);\n    let datosSelected = {Datos: (this.labelGastos)?this.gastosTodos.filter(ob=>ob.Tipo ==  this.labelGastos):this.gastosTodos};\n    this.totalGastosDetalle = 0;\n    datosSelected.Datos.forEach(da=>{\n        this.totalGastosDetalle += da.Total;\n    })\n    if(this.datatableGastosDetalle != null){\n        this.datatableGastosDetalle._reiniciarRegistros(datosSelected);\n    }    \n    this.resultadosGastosDetalle = datosSelected;            \n    //this.gastosChart.Tabla = datosSelected;\n}\n//Click en grafica de gastos\nchartGastosClicked2(e){\n    this.labelGastos2 = this._interpreteEventoClicked(e);\n    let datosSelected = {Datos: (this.labelGastos2)?this.gastosTodos.filter(ob=>ob.Pago ==  this.labelGastos2):this.gastosTodos};\n    this.totalGastosDetalle2 = 0;\n    datosSelected.Datos.forEach(da=>{\n        this.totalGastosDetalle2 += da.Total;\n    })\n    if(this.datatableGastosDetalle2 != null){\n        this.datatableGastosDetalle2._reiniciarRegistros(datosSelected);\n    }    \n    this.resultadosGastosDetalle2 = datosSelected;            \n    //this.gastosChart.Tabla = datosSelected;\n}\n//Click en grafica de ingresos\nchartIngresosClicked(e){\n    this.labelIngresos = this._interpreteEventoClicked(e);\n    let datosSelected = {Datos: (this.labelIngresos)?this.ingresosTodos.filter(ob=>ob.Tipo ==  this.labelIngresos):this.ingresosTodos};\n    this.totalIngresosDetalle = 0;\n    datosSelected.Datos.forEach(da=>{\n        this.totalIngresosDetalle += da.Total;\n    })\n    if(this.datatableIngresosDetalle != null){\n        this.datatableIngresosDetalle._reiniciarRegistros(datosSelected);\n    }    \n    this.resultadosIngresosDetalle = datosSelected;            \n}\n//Click en grafica de ingresos\nchartIngresosClicked2(e){\n    this.labelIngresos2 = this._interpreteEventoClicked(e);\n    console.log('label',this.labelIngresos2);\n    let datosSelected = {Datos: (this.labelIngresos2)?this.ingresosTodos.filter(ob=>ob.Pago ==  this.labelIngresos2):this.ingresosTodos};\n    this.totalIngresosDetalle2 = 0;\n    console.log('label',datosSelected);\n    datosSelected.Datos.forEach(da=>{\n        this.totalIngresosDetalle2 += da.Total;\n    })\n    if(this.datatableIngresosDetalle2 != null){\n        this.datatableIngresosDetalle2._reiniciarRegistros(datosSelected);\n    }    \n    this.resultadosIngresosDetalle2 = datosSelected;            \n}\n//Regresa la etiqueta de la grafica que fue seleccionada \n_interpreteEventoClicked(e){\n    if (e.active.length > 0) {\n        const chart = e.active[0]._chart;\n        const activePoints = chart.getElementAtEvent(e.event);\n        if ( activePoints.length > 0) {\n            return chart.data.labels[activePoints[0]._index];\n        }\n    }\n}\n//Procesa y ordena los datos de ingresos \n_procesarIngresos(Datos){\n    let tiposIngresos = [];\n    let contenidoTipoIngresos = [];\n    Datos.forEach(dat =>{\n        tiposIngresos[dat.Tipo] = dat.Tipo;\n    });\n    Object.keys(tiposIngresos).forEach(t => {\n        let coincidencias = Datos.filter(ob=>ob.Tipo == t);\n        contenidoTipoIngresos[t] = coincidencias;\n    })\n    return contenidoTipoIngresos;\n}\n//Procesa y ordena los datos de ingresos \n_procesarIngresos2(Datos){\n    let tiposIngresos = [];\n    let contenidoTipoIngresos = [];\n    console.log('Datos',Datos);\n    Datos.forEach(dat =>{\n        tiposIngresos[dat.Pago] = dat.Pago;\n    });\n    console.log('tipos',tiposIngresos);\n    Object.keys(tiposIngresos).forEach(t => {\n        let coincidencias = Datos.filter(ob=>ob.Pago == t);\n        contenidoTipoIngresos[t] = coincidencias;\n    })\n    return contenidoTipoIngresos;\n}\n//Procesa y ordena  datos de gastos\n_procesarGastos(Datos){\n    let tiposGastos = [];\n    let contenidoTiposGastos = [];\n    Datos.forEach(dat =>{\n        tiposGastos[dat.Tipo] = dat.Tipo;\n    });\n    Object.keys(tiposGastos).forEach(t => {\n        let coincidencias = Datos.filter(ob=>ob.Tipo == t);\n        contenidoTiposGastos[t] = coincidencias;\n    })\n    return contenidoTiposGastos;\n}\n//Procesa y ordena  datos de gastos por pago\n_procesarGastos2(Datos){\n    let tiposGastos = [];\n    let contenidoTiposGastos = [];\n    Datos.forEach(dat =>{\n        tiposGastos[dat.Pago] = dat.Pago;\n    });\n    Object.keys(tiposGastos).forEach(t => {\n        let coincidencias = Datos.filter(ob=>ob.Pago == t);\n        contenidoTiposGastos[t] = coincidencias;\n    })\n    return contenidoTiposGastos;\n}\n//Ordena los datos de una grafica de pastel \n_pieChartOrder(Titulo, Datos){\n    let DatosEtiqueta = [] ; let DatosContenido = [] ;\n    Object.keys(Datos).forEach(key=>{\n        DatosEtiqueta.push(key.toString());\n        DatosContenido.push(Datos[key].length);\n    });\n    return { Nombre: Titulo, DatosEtiqueta, DatosContenido, Datos, Tipo: \"pie\", Tabla:false };\n}\nngOnInit() {}\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FinanzasComponent } from './finanzas.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FinanzasComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FinanzasRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n        <app-page-header [heading]=\\\"'Finanzas'\\\" [icon]=\\\"'fa-dashboard'\\\"></app-page-header>\\n        <!--Menu principal-->\\n        <div class=\\\"row text-center\\\">\\n            <div class=\\\"col-lg-4\\\">\\n                <app-stat [bgClass]=\\\"'secondary'\\\" [icon]=\\\"'fa-users'\\\" [label]=\\\"'Estados Financieros'\\\" (event)=\\\"estadosFinancieros($event);\\\"  ></app-stat>\\n            </div>\\n            <div class=\\\"col-lg-4\\\">    \\n                    <app-stat [bgClass]=\\\"'success'\\\" [icon]=\\\"'fa-address-card'\\\" [label]=\\\"'Catalogo de cuentas'\\\" (event)=\\\"catalogoCuentas($event);\\\"  ></app-stat>\\n            </div>\\n        </div>\\n        <hr />\\n        <div *ngIf=\\\"vistaCentro\\\">\\n            <!--Cotizaciones-->\\n            <app-estado-financiero class=\\\"row\\\" *ngIf=\\\"verEstadoFinanciero\\\" [@routerTransition]></app-estado-financiero>\\n            <!--Clientes-->\\n            <app-catalogo-cuentas class=\\\"row\\\" *ngIf=\\\"verCatalogoCuentas\\\" [@routerTransition]></app-catalogo-cuentas>\\n        </div> \\n    </div>\\n    \"","module.exports = \".btn-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-success {\\n  color: #fff; }\\n\\n.btn-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.btn-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.btn-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n.btn-info:focus, .btn-info:hover, .btn-info.focus {\\n  color: #fff;\\n  background-color: #396B57 !important;\\n  border-color: #174935; }\\n\\n.btn-primary:focus, .btn-primary:hover, .btn-primary.focus {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning:focus, .btn-warning:hover, .btn-warning.focus {\\n  color: #fff;\\n  background-color: #2D6E00 !important;\\n  border-color: #0a2a1c; }\\n\\n.btn-danger:focus, .btn-danger:hover, .btn-danger.focus {\\n  color: #fff;\\n  background-color: #7F4700 !important;\\n  border-color: #623900; }\\n\\n.btn-secondary:focus, .btn-secondary:hover, .btn-secondary.focus {\\n  color: #fff;\\n  background-color: #2D3854 !important;\\n  border-color: #0c0d35; }\\n\\n.bg-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.bg-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.bg-success {\\n  color: #fff; }\\n\\n.bg-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.bg-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.bg-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n/* The switch - the box around the slider */\\n\\n.switch {\\n  position: relative;\\n  display: inline-block;\\n  width: 60px;\\n  height: 34px; }\\n\\n/* Hide default HTML checkbox */\\n\\n.switch input {\\n  opacity: 0;\\n  width: 0;\\n  height: 0; }\\n\\n/* The slider */\\n\\n.slider {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: .4s; }\\n\\n.slider:before {\\n  position: absolute;\\n  content: \\\"\\\";\\n  height: 26px;\\n  width: 26px;\\n  left: 4px;\\n  bottom: 4px;\\n  background-color: white;\\n  transition: .4s; }\\n\\ninput:checked + .slider {\\n  background-color: #2196F3; }\\n\\ninput:focus + .slider {\\n  box-shadow: 0 0 1px #2196F3; }\\n\\ninput:checked + .slider:before {\\n  -webkit-transform: translateX(26px);\\n  transform: translateX(26px); }\\n\\n/* Rounded sliders */\\n\\n.slider.round {\\n  border-radius: 34px; }\\n\\n.slider.round:before {\\n  border-radius: 50%; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { EstadisticasService } from '../../shared/services/estadisticas.service'\nimport { CatalogosService } from '../../shared/services/catalogos.service'\nimport * as moment  from 'moment';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'app-finanzas',\n    templateUrl: './finanzas.component.html',\n    styleUrls: ['./finanzas.component.scss'],\n    animations: [routerTransition()],\n    providers: [EstadisticasService, CatalogosService]\n})\n\nexport class FinanzasComponent implements OnInit {\nverCatalogoCuentas; verEstadoFinanciero;vistaCentro;\nconstructor(private estadisticasService: EstadisticasService, private catalogosService : CatalogosService) {\n    this.verCatalogoCuentas = this.verEstadoFinanciero = false;\n\n}\ncatalogoCuentas(){\n    this._limpiarVista();\n    this._delay(100).then(res=>{\n        this.verCatalogoCuentas = true;\n        this.vistaCentro = true;\n    });\n}\nestadosFinancieros(){\n    this._limpiarVista();\n    this._delay(100).then(res=>{\n        this.verEstadoFinanciero = true;\n        this.vistaCentro = true;\n    });\n}\n_limpiarVista(){\n    this.verCatalogoCuentas = this.verEstadoFinanciero = this.vistaCentro = false;\n}\n_delay(ms){\n    return new Promise( resolve => setTimeout(resolve, ms) );\n}\nngOnInit() {}\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { FinanzasRoutingModule } from './finanzas-routing.module';\nimport { FinanzasComponent } from './finanzas.component';\nimport { SharedModule } from '../../shared';\nimport { EstadoFinancieroComponent, CatalogoCuentasComponent} from './'\n\n\n@NgModule({\n    imports: [ FinanzasRoutingModule, SharedModule ],\n    declarations: [ FinanzasComponent,EstadoFinancieroComponent, CatalogoCuentasComponent]\n})\nexport class FinanzasModule {}\n","export * from './estado-financiero/estado-financiero.component';\nexport * from './catalogo-cuentas/catalogo-cuentas.component';\n\n\n"],"sourceRoot":""}