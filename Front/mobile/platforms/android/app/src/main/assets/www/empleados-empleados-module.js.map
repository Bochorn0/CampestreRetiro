{"version":3,"sources":["webpack:///./src/app/layout/empleados/empleados-routing.module.ts","webpack:///./src/app/layout/empleados/empleados.component.html","webpack:///./src/app/layout/empleados/empleados.component.scss","webpack:///./src/app/layout/empleados/empleados.component.ts","webpack:///./src/app/layout/empleados/empleados.module.ts"],"names":[],"mappings":"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","file":"empleados-empleados-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmpleadosComponent } from './empleados.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EmpleadosComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EmpleadosRoutingModule {}\n","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Empleados'\\\" [icon]=\\\"'fa-desktop'\\\"></app-page-header>\\n    <!--Menu principal-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-xl-12 col-lg-12\\\">\\n            <button (click)=\\\"nuevoEmpleado();\\\" class=\\\"btn btn-success\\\"><i class=\\\"fa fa-plus-circle\\\"></i> Nuevo Empleado</button>\\n            <br><br>\\n        </div>\\n        <div class=\\\"col-xl-6 col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'primary'\\\" [icon]=\\\"'fa-address-book'\\\" [label]=\\\"'Empleados Activos'\\\" (event)=\\\"mostrarEmpleados($event);\\\"></app-stat>\\n        </div>\\n        <div class=\\\"col-xl-6 col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'warning'\\\" [icon]=\\\"'fa-wrench'\\\" [label]=\\\"'Nomina'\\\" (event)=\\\"mostrarCalcularNomina($event);\\\" ></app-stat>\\n        </div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\" *ngIf=\\\"this.vistaCentro\\\">\\n        <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\">\\n            <!--Empleados Activos-->\\n            <div class=\\\"row\\\" *ngIf=\\\"this.empladosActivos\\\" [@routerTransition]>\\n                <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\" *ngIf=\\\"this.empladosActivos\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header bg-primary\\\">\\n                            Empleados Activos\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <app-datatables-general *ngIf=\\\"this.empladosActivos\\\" [datosDatatable]=\\\"this.empladosActivos\\\"></app-datatables-general>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--Calcular Nominas-->\\n            <div class=\\\"row\\\" *ngIf=\\\"this.mostrarNomina\\\" [@routerTransition]>\\n                <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\" >\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header bg-warning\\\">\\n                            Calcular Nomina\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Empleado </label>\\n                                        <input autofocus id=\\\"typeahead-format\\\" placeholder=\\\"Nombre del empleado:\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"catalogoEmpleados.Nombre\\\" [ngbTypeahead]=\\\"filtrarEmpleado\\\" (selectItem)=\\\"seleccionarEmpleado($event)\\\" [resultFormatter]=\\\"formatter\\\" />\\n                                        <input type=\\\"hidden\\\" value=\\\"0\\\" *ngIf=\\\"datosEmpleado\\\" [(ngModel)]=\\\"datosEmpleado.IdEmpleado\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Sueldo  </label>\\n                                        <input type=\\\"number\\\"  [(ngModel)]=\\\"sueldoEmpleado\\\" class=\\\"form-control\\\"/>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Horas  </label>\\n                                        <input type=\\\"number\\\"  [(ngModel)]=\\\"horasLaboradas\\\" class=\\\"form-control\\\"/>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Descuentos  </label>\\n                                        <input type=\\\"number\\\"  [(ngModel)]=\\\"descuentos\\\" class=\\\"form-control\\\"/>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Bonos  </label>\\n                                        <input type=\\\"number\\\"  [(ngModel)]=\\\"bonos\\\" class=\\\"form-control\\\"/>\\n                                    </div>\\n                                </div>\\n                                <hr>\\n                                <div class=\\\"col-lg-12\\\" *ngIf=\\\"datosEmpleado\\\">\\n                                    <h4 class=\\\"text-danger text-center\\\">Ventas Acumuladas</h4>\\n                                    <table class=\\\"table table-hover table-stripped\\\">\\n                                        <tr>\\n                                            <th>Folio</th>\\n                                            <th>Tipo</th>\\n                                            <th>Terreno</th>\\n                                            <th>Fecha venta</th>\\n                                            <th>Monto</th>\\n                                            <th>Comision</th>\\n                                        </tr>\\n                                        <tr *ngFor=\\\"let ven of datosEmpleado.Ventas\\\">\\n                                            <td>{{ven.Folio_venta}}-{{ven.IdVenta}}</td>\\n                                            <td>{{ven.Tipo_venta}}</td>\\n                                            <td>Parcela:{{ven.DatosTerreno.parcela}} - Lote: {{ven.DatosTerreno.lote}} - Etapa: {{ven.DatosTerreno.etapa}}</td>\\n                                            <td>{{ven.Fecha_venta.split('T')[0]}}</td>\\n                                            <td>{{ven.Importe|number}}</td>\\n                                            <td><input style=\\\"width: 150px;\\\" class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"Comision: %\\\" [(ngModel)]=\\\"ven.Comision\\\" /></td>\\n                                        </tr>\\n                                    </table>\\n                                </div>\\n                                <div class=\\\"col-lg-12 pull-right\\\"><button class=\\\"btn btn-info pull-right\\\" (click)=\\\"calcularNominaEmpleado();\\\">Calcular</button></div>\\n                                <div class=\\\"col-lg-12\\\" *ngIf=\\\"nominaCalculada\\\">\\n                                    <div class=\\\"card mb-3\\\">\\n                                        <div class=\\\"card-header bg-info\\\">\\n                                            Nomina de {{datosEmpleado.Nombre}}\\n                                        </div>\\n                                        <div class=\\\"card-body\\\">\\n                                            <table class=\\\"table table-stripped table-hover\\\">\\n                                                <tr><th>Horas Laboradas</th><th>Comisiones</th><th>Sueldo</th><th>Bonos</th><th>Descuentos</th><th>Total</th></tr>\\n                                                <tr><td>{{datosEmpleado.Horas}}</td><td>{{datosEmpleado.Comisiones}}</td><td>{{datosEmpleado.Sueldo}}</td><td>{{datosEmpleado.Bonos}}</td><td>-{{datosEmpleado.Descuentos_totales}}</td><td>$ {{totalNomina}}</td></tr>\\n                                            </table>\\n                                            <button class=\\\"btn btn-success pull-right\\\" (click)=\\\"guardarNomina();\\\">Guardar Nomina</button>\\n                                        </div>\\n                                    </div> \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <!--Nuevo Empleado-->\\n            <div class=\\\"row\\\" *ngIf=\\\"this.altaEmpleado\\\" [@routerTransition]>\\n                <div class=\\\"col-xs-12 col-xl-12 col-lg-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Nuevo Empleado\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Nombre</label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nombre empleado: \\\" [(ngModel)]=\\\"nombre\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Correo </label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Correo:\\\"  [(ngModel)]=\\\"correo\\\"/>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Puesto </label>\\n                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"puesto\\\" >\\n                                            <option value=\\\"0\\\">Selecciona el puesto</option>\\n                                            <option *ngFor=\\\"let pue of catalogoPuestos\\\" value=\\\"pue.Nombre_perfil\\\">{{pue.Nombre_perfil}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Sueldo </label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"10000\\\" [(ngModel)]=\\\"sueldo\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Fecha nacimiento </label>\\n                                        <input type=\\\"date\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fNacimiento\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> &nbsp;</label><br>\\n                                        <button (click)=\\\"guardarEmpleadoNuevo();\\\"  class=\\\"btn btn-primary pull-right\\\">Guardar</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".btn-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.btn-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.btn-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n.btn-info:focus, .btn-info:hover, .btn-info.focus {\\n  color: #fff;\\n  background-color: #396B57 !important;\\n  border-color: #174935; }\\n\\n.btn-primary:focus, .btn-primary:hover, .btn-primary.focus {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning:focus, .btn-warning:hover, .btn-warning.focus {\\n  color: #fff;\\n  background-color: #2D6E00 !important;\\n  border-color: #0a2a1c; }\\n\\n.btn-danger:focus, .btn-danger:hover, .btn-danger.focus {\\n  color: #fff;\\n  background-color: #7F4700 !important;\\n  border-color: #623900; }\\n\\n.btn-secondary:focus, .btn-secondary:hover, .btn-secondary.focus {\\n  color: #fff;\\n  background-color: #2D3854 !important;\\n  border-color: #0c0d35; }\\n\\n.bg-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.bg-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.bg-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.bg-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.bg-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { CatalogosService } from '../../shared/services/catalogos.service';\nimport { VentasService } from '../../shared/services/ventas.service';\nimport * as moment from 'moment';\nimport swal from 'sweetalert2';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Component({\n    selector: 'app-empleados',\n    templateUrl: './empleados.component.html',\n    styleUrls: ['./empleados.component.scss'],\n    animations: [routerTransition()],\n    providers: [CatalogosService,VentasService]\n})\nexport class EmpleadosComponent implements OnInit {\n    vistaCentro;empladosActivos;altaEmpleado;catalogoPuestos;mostrarNomina;\n    catalogoUsuarios;catalogoTerrenos;\n    catalogoEmpleados;nombresEmpleados;totalNomina;nominaCalculada;horasLaboradas;comision;datosEmpleado;sueldoEmpleado;\n    bonos;descuentos;\n    //Alta nuevo empleado\n    nombre;fNacimiento;correo;sueldo;puesto;\n    //Alta Nuevo Puesto\n    constructor(private catalogosService : CatalogosService, private ventasService : VentasService) {\n        this._catalogoEmpleados();\n        this._catalogoPuestos();\n        this._catalogoUsuarios();\n        this._catalogoTerrenos();\n        this.puesto = 0;\n        this.totalNomina  = this.horasLaboradas = this.comision = this.bonos = this.descuentos = 0;\n    }\n    _catalogoTerrenos(){\n        this.catalogosService.obtenerTerrenos().then(res=>{\n            console.log('res',res);\n            this.catalogoTerrenos =  res['Data'];\n        });        \n    }\n    _catalogoEmpleados(){\n        this.catalogosService.obtenerEmpleados().then(res=>{\n            console.log('res',res);\n            this.catalogoEmpleados =  res['Data'];\n            this.nombresEmpleados = res['Data'].map((key)=>{\n                return key.Nombre;\n            });\n        });\n    }\n    _catalogoUsuarios(){\n        this.catalogosService.obtenerUsuarios().then(res=>{\n            console.log('res',res);\n            this.catalogoUsuarios =  res['Data'];\n        });\n    }\n    _catalogoPuestos(){ \n        this.catalogosService.obtenerPuestos().then(res=>{\n            this.catalogoPuestos =  res['Data'];\n        });\n    }\n    filtrarEmpleado = (text$: Observable<string>) =>\n    text$.pipe( debounceTime(200), distinctUntilChanged(),\n      map(term => term === ''?[]:this.nombresEmpleados.filter(ob => ob.toUpperCase().indexOf(term.toUpperCase()) > -1))\n  );\n    ngOnInit() {}\n    mostrarEmpleados(event){\n        this._limpiarVariables();\n        this.catalogosService.obtenerEmpleados().then(res =>{\n            this.vistaCentro = true;\n            this.empladosActivos =  { Datos : res['Data']};\n        }).catch(err=>{this._limpiarVariables();});\n    }\n    nuevoEmpleado(){\n        this._limpiarVariables();\n        this._delay(100).then(res=>{\n            this.altaEmpleado =  (this.altaEmpleado)?false:true;\n            this.vistaCentro= true;\n        })\n    }\n    guardarEmpleadoNuevo(){\n        let Datos = {Nombre:this.nombre, Fecha_nacimiento:this.fNacimiento, Correo: this.correo,\n        Sueldo: this.sueldo, Puesto:this.puesto };\n        this.catalogosService.guardarNuevoEmpleado(Datos).then(res =>{\n            let tipo = res['Tipo'];\n            swal('Exito', `${res['Operacion']}`, tipo);\n            this.mostrarEmpleados(true);\n        }).catch(err=>{console.log('err',err);});\n    }\n    mostrarCalcularNomina(evento){\n        this._limpiarVariables();\n        this._delay(100).then(res=>{\n            this.mostrarNomina = true;\n            this.vistaCentro= true;\n        })\n    }\n    seleccionarEmpleado(selected,t){\n        this.datosEmpleado =  this.catalogoEmpleados.filter(ob=>ob.Nombre == selected.item.toString())[0];\n        this.datosEmpleado.DatosUsuario = this.catalogoUsuarios.filter(ob=>ob.IdEmpleado == this.datosEmpleado.IdEmpleado);\n        this.sueldoEmpleado = this.datosEmpleado.Sueldo;\n        console.log('datos empleado',this.datosEmpleado);\n        if(this.datosEmpleado.DatosUsuario[0]){\n            this.ventasService.obtenerVentasPorEmpleado(this.datosEmpleado.DatosUsuario[0]).then(res=>{\n\n                res['Datos'].forEach(re=>{\n                    re.DatosTerreno = this.catalogoTerrenos.find(ct=>ct.IdTerreno ==  re.IdTerreno);\n                    console.log('re',re);\n                });\n                this.datosEmpleado.Ventas = res['Datos'];\n                this.datosEmpleado.Cobros = res['Datos'];\n            }).catch(err=>{console.log('err',err);});\n        }else{\n            this.datosEmpleado.Ventas = [];\n        }\n        this.horasLaboradas = 40;\n    }\n    calcularNominaEmpleado(){\n        let comisionesMonto = 0;\n        if(this.datosEmpleado.Ventas[0]){\n            let comisiones = this.datosEmpleado.Ventas.map((key)=>{\n                return {Importe: key.Importe, Comision: key.Comision, Monto: (key.Importe* (key.Comision/100))};\n            });\n            comisiones.forEach(c=>{\n                comisionesMonto += c.Monto\n            });\n        }\n        this.datosEmpleado.Sueldo = this.sueldoEmpleado;\n        this.datosEmpleado.Horas =  this.horasLaboradas;\n        this.datosEmpleado.Comisiones = comisionesMonto;\n        this.datosEmpleado.Bonos = this.bonos;\n        this.datosEmpleado.Descuentos = this.descuentos;\n        this.datosEmpleado.Descuentos_totales = this.descuentos;\n        if(this.horasLaboradas < 40){\n            let descontado_sueldo = (((40-this.horasLaboradas)*this.sueldoEmpleado)/40);\n            console.log('des',descontado_sueldo);\n            this.datosEmpleado.Descuentos_totales += descontado_sueldo;\n        }\n        this.totalNomina = ((this.horasLaboradas*this.sueldoEmpleado)/40)+comisionesMonto+this.bonos-this.descuentos;\n        this.datosEmpleado.Total = this.totalNomina;\n        this.nominaCalculada = true;\n    }\n    guardarNomina(){\n        let usuario = JSON.parse(localStorage.getItem('Datos'));\n        let datosNomina = {Usuario: usuario, Nomina: this.datosEmpleado};\n        this.catalogosService.guardarNominaEmpleado(datosNomina).then(res=>{\n            let tipo = res['Tipo'];\n            swal('Exito', `${res['Operacion']}`, tipo);\n            this._limpiarVariables();\n        }).catch(err=>{console.log('err',err);});\n    }\n    _limpiarVariables(){\n    this.vistaCentro  =  this.altaEmpleado = this.empladosActivos = this.fNacimiento  = this.nominaCalculada = false;\n    this.correo =  this.nombre = '';\n    this.puesto = this.sueldo = 0;\n    this.datosEmpleado = this.sueldoEmpleado = this.descuentos = this.bonos = this.horasLaboradas = 0 ;\n    }\n    _delay(ms){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { EmpleadosRoutingModule } from './empleados-routing.module';\nimport { EmpleadosComponent } from './empleados.component';\nimport { SharedModule } from './../../shared';\n\n\n@NgModule({\n    imports: [EmpleadosRoutingModule,SharedModule],\n    declarations: [EmpleadosComponent]\n})\nexport class EmpleadosModule {}\n"],"sourceRoot":""}