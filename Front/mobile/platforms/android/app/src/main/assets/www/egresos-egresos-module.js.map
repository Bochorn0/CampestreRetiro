{"version":3,"sources":["webpack:///./src/app/layout/egresos/egresos-routing.module.ts","webpack:///./src/app/layout/egresos/egresos.component.html","webpack:///./src/app/layout/egresos/egresos.component.scss","webpack:///./src/app/layout/egresos/egresos.component.ts","webpack:///./src/app/layout/egresos/egresos.module.ts","webpack:///./src/app/shared/services/contabilidad.service.ts"],"names":[],"mappings":"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","file":"egresos-egresos-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EgresosComponent } from './egresos.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: EgresosComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EgresosRoutingModule {\n}\n","module.exports = \"<div [@routerTransition]>\\n    <app-page-header [heading]=\\\"'Gastos nuevos'\\\" [icon]=\\\"'fa-table'\\\"></app-page-header>\\n    <hr>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-xl-12 col-lg-12\\\">\\n            <button (click)=\\\"nuevoGasto();\\\" class=\\\"btn btn-info text--right\\\"><i class=\\\"fa fa-plus\\\"></i> Nuevo Gasto</button>\\n            <button (click)=\\\"subirArchivo.click();\\\" class=\\\"btn btn-danger pull-right\\\"><i class=\\\"fa fa-upload\\\"></i> <i class=\\\"fa fa-file-excel\\\"></i> Cargar Excel</button>\\n            <button (click)=\\\"obtenerPlantillaGastos();\\\" class=\\\"btn btn-warning pull-right\\\"><i class=\\\"fa fa-download\\\"></i> <i class=\\\"fa fa-file-excel\\\"></i> Exportar Plantilla </button>\\n            <button *ngIf=\\\"this.chksGastos.length > 0\\\" (click)=\\\"borrarMultiplesGastos();\\\" class=\\\"btn btn-danger-clasic pull-right\\\"><i class=\\\"fa fa-times\\\"></i> Borrar Multiples </button>\\n<!--            <input #subirArchivo style=\\\"display: none;\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\" type=\\\"file\\\" (change)=\\\"importar_excel($event)\\\" />-->\\n            <br><br>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'primary'\\\" [icon]=\\\"'fa-money'\\\" [label]=\\\"'Ver Gastos'\\\" (event)=\\\"obtenerGastos($event);\\\"  ></app-stat>\\n        </div>\\n        <div class=\\\"col-lg-6\\\">\\n            <app-stat [bgClass]=\\\"'warning'\\\" [icon]=\\\"'fa-building'\\\" [label]=\\\"'Catalogo de categorias'\\\" (event)=\\\"verCatalogoCategorias($event);\\\" ></app-stat>\\n        </div>\\n<!--        <div class=\\\"col-xl-4 col-lg-4\\\">\\n            <app-stat [bgClass]=\\\"'info'\\\" [icon]=\\\"'fa-briefcase'\\\" [label]=\\\"'Reportes'\\\" ></app-stat>\\n        </div>-->\\n    </div>\\n    <hr />\\n    <form [formGroup]=\\\"frmSolicitud\\\" class=\\\"form-validate\\\" (keydown.enter)=\\\"$event.preventDefault()\\\" novalidate=\\\"\\\">\\n        <!--,application/vnd.ms-excel-->\\n            <input #subirArchivo style=\\\"display: none;\\\" accept=\\\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\\\" type=\\\"file\\\" (change)=\\\"importar_excel($event)\\\"  formControlName=\\\"File\\\" />\\n            <br><br>\\n    </form>\\n    <div class=\\\"row\\\" *ngIf=\\\"vistaCentro\\\">\\n        <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\">\\n            <div class=\\\"row\\\" *ngIf=\\\"this.altaNuevoGasto\\\" [@routerTransition]>\\n                <div class=\\\"col-xs-12 col-xl-12 col-lg-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header bg-info\\\">\\n                            Nuevo Gasto UN\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Folio </label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"GAS-0001\\\" [(ngModel)]=\\\"folGasto\\\" disabled />\\n                                    </div>\\n                                </div>\\n<!--                                <div class=\\\"col-lg-3\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Tipo de gasto </label>\\n                                        <div class=\\\"form-group\\\">\\n                                            <input autofocus id=\\\"typeahead-format\\\" placeholder=\\\"Tipo de gasto:\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"tipoGasto\\\" [ngbTypeahead]=\\\"filtrarGastos\\\" (selectItem)=\\\"seleccionarGasto($event)\\\" [resultFormatter]=\\\"formatter\\\" />\\n                                        </div>\\n                                    </div>\\n                                </div>-->\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Categoria </label>\\n                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"categoriaGasto\\\" (change)=\\\"seleccionarCategoria();\\\">\\n                                            <option value=\\\"0\\\">Selecciona</option>\\n                                            <option *ngFor=\\\"let c of this.catalogoCategorias.Categorias\\\" value=\\\"{{c.Categoria}}\\\">{{c.Categoria}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-3\\\" *ngIf=\\\"subcategorias.length > 0\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Subcategoria </label>\\n                                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"subcategoriaGasto\\\">\\n                                            <option value=\\\"0\\\">Selecciona</option>\\n                                            <option *ngFor=\\\"let c of this.subcategorias\\\" value=\\\"{{c.Subcategoria}}\\\">{{c.Subcategoria}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>                                \\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Importe </label>\\n                                        <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"10000\\\" [(ngModel)]=\\\"totalGasto\\\" />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-3\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Forma de Pago </label>\\n                                        <div class=\\\"form-group\\\">\\n                                            <!--<input autofocus id=\\\"typeahead-format\\\" placeholder=\\\"Fuente del gasto:\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"fuenteGasto\\\" [ngbTypeahead]=\\\"filtrarFuentes\\\" [resultFormatter]=\\\"formatter\\\" />-->\\n                                            <select [(ngModel)]=\\\"fuenteGasto\\\" class=\\\"form-control\\\">\\n                                                <option value=\\\"0\\\">Selecciona una fuente</option>\\n                                                <option *ngFor=\\\"let f of formaDePago\\\" value=\\\"{{f.IdCuenta}}\\\">{{f.Nombre}}</option>\\n                                            </select>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-8 col-lg-8\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Concepto Gasto </label>\\n                                        <textarea class=\\\"form-control\\\" placeholder=\\\"Concepto:\\\" [(ngModel)]=\\\"conceptoGasto\\\" style=\\\"min-height: 115px;\\\"></textarea>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-xs-4 col-lg-4\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Adjuntos </label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <label class=\\\"input-group-btn\\\" style=\\\"margin:0;\\\">\\n                                                <span class=\\\"btn btn-success\\\" >\\n                                                    <i class=\\\"fa fa-upload\\\"> </i> Cargar adjunto\\n                                                    <input type=\\\"file\\\" style=\\\"display: none;\\\" accept=\\\"image/*\\\" (change)=\\\"nombreArchivo($event);\\\" required>\\n                                                </span>\\n                                            </label>\\n                                            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"egresoAdjuntoNombre\\\">\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Responsable </label>\\n                                        <select  class=\\\"form-control\\\" [(ngModel)]=\\\"responsable\\\">\\n                                            <option value=\\\"0\\\">Selecciona un empleado</option>\\n                                            <option *ngFor=\\\"let f of nombresEmpleados\\\" value=\\\"{{f}}\\\">{{f}}</option>\\n                                        </select>\\n<!--                                        <input placeholder=\\\"Nombre del responsable:\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"responsable\\\" [ngbTypeahead]=\\\"filtrarResponsables\\\" (selectItem)=\\\"this.responsable = $event.item\\\" [resultFormatter]=\\\"formatter\\\" />-->\\n                                    </div>\\n                                    <br>\\n                                </div>\\n                                <div class=\\\"col-lg-7\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Nota: </label>\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Nota:\\\" [(ngModel)]=\\\"notaGasto\\\"  />\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"col-lg-3\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"label-form\\\"> Fecha Manual: </label>\\n<!--                                            <input type=\\\"date\\\" class=\\\"form-control\\\" placeholder=\\\"Nota:\\\" [(ngModel)]=\\\"notaGasto\\\"  />-->\\n                                            <input type=\\\"date\\\" [(ngModel)]=\\\"fechaGasto\\\" class=\\\"form-control\\\" >\\n                                        </div>\\n                                    </div>\\n                                <div class=\\\"col-lg-2\\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"><br></label><br>\\n                                        <button (click)=\\\"guardarNuevoGasto();\\\"  class=\\\"btn btn-primary pull-right\\\">Guardar</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" *ngIf=\\\"this.datosGastos\\\" [@routerTransition]>\\n                <div class=\\\"col-xs-12 col-lg-12 col-xl-12\\\">\\n                    <div class=\\\"card-header bg-primary\\\">\\n                        Gastos <b class=\\\"pull-right\\\" style=\\\"color: #fff;\\\">$ {{this.totalGastoAcumulado | number}}</b>\\n                    </div>\\n                    <div class=\\\"card-body table-responsive\\\">\\n                        <div class=\\\"row\\\">\\n<!--                            <div class=\\\"col-lg-4\\\" *ngIf=\\\"catalogoGastos && datosGastos.Datos.length > 0\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"label-form\\\"> Por Tipo de Gasto </label>\\n                                    <select class=\\\"form-control\\\" (change)=\\\"filtrarGastosPorTipo();\\\" [(ngModel)]=\\\"tipoGastoFiltro\\\" >\\n                                        <option value=\\\"0\\\">Selecciona el tipo</option>\\n                                        <option *ngFor=\\\"let gas of catalogoGastos\\\" value=\\\"{{gas.Tipo}}\\\">{{gas.Tipo}}</option>\\n                                    </select>\\n                                </div>\\n                            </div>-->\\n                            <!--&& datosGastos.Datos.length > 0-->\\n                            <div class=\\\"col-lg-3\\\" *ngIf=\\\"categoriasFiltro\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"label-form\\\"> Por Categoria </label>\\n<!--                                    <select class=\\\"form-control\\\" (change)=\\\"filtrarGastosPorTipo();\\\" [(ngModel)]=\\\"tipoGastoFiltro\\\" >\\n                                        <option value=\\\"0\\\">Selecciona el tipo</option>\\n                                        <option *ngFor=\\\"let gas of catalogoGastos\\\" value=\\\"{{gas.Tipo}}\\\">{{gas.Tipo}}</option>\\n                                    </select>-->\\n                                    <select type=\\\"text\\\" (change)=\\\"filtrarGastosPorTipo(); \\\" [(ngModel)]=\\\"categoria_\\\"  class=\\\"form-control\\\" >\\n                                        <option value=\\\"0\\\">Todas</option>\\n                                        <option *ngFor=\\\"let c of categoriasFiltro\\\" value=\\\"{{c.Categoria}}\\\">{{c.Categoria}}</option>\\n                                    </select>\\n                                </div>\\n                            </div><!--&& datosGastos.Datos.length > 0-->\\n                            <div class=\\\"col-lg-3\\\" *ngIf=\\\"subcategoriasFiltro \\\">\\n                                    <div class=\\\"form-group\\\">\\n                                        <label class=\\\"label-form\\\"> Por Subcategoria </label>\\n                                        <select type=\\\"text\\\" (change)=\\\"filtrarGastosPorTipo();\\\" [(ngModel)]=\\\"subcategoria_\\\"  class=\\\"form-control\\\" >\\n                                            <option value=\\\"0\\\">Todas</option>\\n                                            <option *ngFor=\\\"let c of subcategoriasFiltro\\\" value=\\\"{{c.Subcategoria}}\\\">{{c.Subcategoria}}</option>\\n                                        </select>\\n                                    </div>\\n                                </div>\\n\\n                            <div class=\\\"col-lg-3\\\" *ngIf=\\\"datosGastos.Datos.length > 0\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"label-form\\\"> Fecha inicio </label>\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"fInicio\\\" (change)=\\\"filtrarGastosPorTipo();\\\" class=\\\"form-control\\\" >\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-lg-3\\\" *ngIf=\\\"datosGastos.Datos.length > 0\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"label-form\\\"> Fecha fin </label>\\n                                    <input type=\\\"date\\\" [(ngModel)]=\\\"fFin\\\" (change)=\\\"filtrarGastosPorTipo();\\\" class=\\\"form-control\\\" >\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-lg-12\\\">\\n                                <app-datatables-general #datatableGastos *ngIf=\\\"this.datosGastos\\\" [datosDatatable]=\\\"this.datosGastos\\\" (delete)=\\\"borrarGasto($event);\\\" (checks)=\\\"this.chksGastos = $event\\\"></app-datatables-general>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--Catalogo de categorias-->\\n            <div class=\\\"row\\\" *ngIf=\\\"formularioCatalogoCategorias\\\" [@routerTransition]>\\n                <div class=\\\"col-lg-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header bg-warning\\\">\\n                            Catalogo de categorias\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <button class=\\\"btn btn-green\\\" (click)=\\\"nuevaCategoria();\\\"> <i class=\\\"fa fa-plus-circle\\\"></i> Categoria </button>\\n                                    <div class=\\\"row\\\" *ngIf=\\\"categoriaAlta\\\">\\n                                        <div class=\\\"col-lg-8\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"label-form\\\"> Nombre categoria </label>\\n                                                <input type=\\\"text\\\" [(ngModel)]=\\\"nombreCategoria\\\"  class=\\\"form-control\\\" >\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"col-lg-4\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label class=\\\"label-form\\\"> <br> </label><br>\\n                                                <button class=\\\"btn btn-primary\\\" (click)=\\\"guardarCategoriaNueva();\\\" >Guardar</button>\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-lg-12\\\"><br><hr></div>\\n                                    <app-datatables-general #datatableCategorias *ngIf=\\\"datosCategorias\\\" [datosDatatable]=\\\"datosCategorias\\\" (edit)=\\\"editarCategoria($event);\\\" (delete)=\\\"borrarCategoria($event);\\\"></app-datatables-general>\\n                                </div>\\n                                <div class=\\\"col-lg-6\\\">\\n                                    <button class=\\\"btn btn-green\\\" (click)=\\\"nuevaSubcategoria();\\\"> <i class=\\\"fa fa-plus-circle\\\"></i> Subcategoria </button>\\n                                    <div class=\\\"row\\\" *ngIf=\\\"subcategoriaAlta\\\">\\n                                            <div class=\\\"col-lg-4\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label class=\\\"label-form\\\"> Categoria </label>\\n                                                    <select type=\\\"text\\\" [(ngModel)]=\\\"idCategoriaPadre\\\"  class=\\\"form-control\\\" >\\n                                                        <option value=\\\"0\\\">Selecciona</option>\\n                                                        <option *ngFor=\\\"let c of this.catalogoCategorias.TodasPadres\\\" value=\\\"{{c.IdCategoria}}\\\">{{c.Categoria}}</option>\\n                                                    </select>\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-lg-4\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label class=\\\"label-form\\\"> Subcategoria </label>\\n                                                    <input type=\\\"text\\\" [(ngModel)]=\\\"nombreCategoria\\\"  class=\\\"form-control\\\" >\\n                                                </div>\\n                                            </div>\\n                                            <div class=\\\"col-lg-4\\\">\\n                                                <div class=\\\"form-group\\\">\\n                                                    <label class=\\\"label-form\\\"> <br> </label><br>\\n                                                    <button class=\\\"btn btn-primary \\\" (click)=\\\"guardarCategoriaNueva();\\\" >Guardar</button>\\n                                                </div>\\n                                            </div>\\n                                        </div>\\n                                    <div class=\\\"col-lg-12\\\"><br><hr></div>\\n                                    <app-datatables-general #datatableSubcategorias *ngIf=\\\"datosSubcategorias\\\" [datosDatatable]=\\\"datosSubcategorias\\\" (edit)=\\\"editarSubcategoria($event);\\\" (delete)=\\\"borrarSubcategoria($event);\\\"></app-datatables-general>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".bg-info, .bg-primary {\\n  color: #fff; }\\n\\n.btn-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.btn-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.btn-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.btn-danger-clasic {\\n  color: #fff;\\n  background-color: #d9534f;\\n  border-color: #d43f3a; }\\n\\n.btn-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\\n.btn-info:focus, .btn-info:hover, .btn-info.focus {\\n  color: #fff;\\n  background-color: #396B57 !important;\\n  border-color: #174935; }\\n\\n.btn-primary:focus, .btn-primary:hover, .btn-primary.focus {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.btn-warning:focus, .btn-warning:hover, .btn-warning.focus {\\n  color: #fff;\\n  background-color: #2D6E00 !important;\\n  border-color: #0a2a1c; }\\n\\n.btn-danger:focus, .btn-danger:hover, .btn-danger.focus {\\n  color: #fff;\\n  background-color: #7F4700 !important;\\n  border-color: #623900; }\\n\\n.btn-danger-clasic:focus, .btn-danger-clasic:hover, .btn-danger-clasic.focus {\\n  color: #fff;\\n  background-color: #c9302c;\\n  border-color: #ac2925; }\\n\\n.btn-secondary:focus, .btn-secondary:hover, .btn-secondary.focus {\\n  color: #fff;\\n  background-color: #2D3854 !important;\\n  border-color: #0c0d35; }\\n\\n.bg-info {\\n  color: #fff;\\n  background-color: #359B83 !important;\\n  border-color: #46b8da; }\\n\\n.bg-primary {\\n  color: #fff;\\n  background-color: #10798D !important;\\n  border-color: #46b8da; }\\n\\n.bg-warning {\\n  color: #fff;\\n  background-color: #2A8901 !important;\\n  border-color: #46b8da; }\\n\\n.bg-danger {\\n  color: #fff;\\n  background-color: #955006 !important;\\n  border-color: #46b8da; }\\n\\n.bg-secondary {\\n  color: #fff;\\n  background-color: #232E5C !important;\\n  border-color: #46b8da; }\\n\"","import { Component, OnInit ,ViewChild } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { ContabilidadService } from '../../shared/services/contabilidad.service';\nimport { CatalogosService } from '../../shared/services/catalogos.service';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\nimport swal from 'sweetalert2';\nimport * as moment from 'moment';\n\n//const moment =  require('moment');\n@Component({\n    selector: 'app-egresos',\n    templateUrl: './egresos.component.html',\n    styleUrls: ['./egresos.component.scss'],\n    animations: [routerTransition()],\n    providers: [ContabilidadService,CatalogosService]\n})\nexport class EgresosComponent implements OnInit {\n    frmSolicitud: FormGroup; // Formulario de solicitud\n    vistaCentro;datosGastos;totalGasto;conceptoGasto;tipoGasto;altaNuevoGasto;folGasto;\n    responsable;empladosActivos;nombresEmpleados;tipoGastoFiltro;catalogoGastos;gastosTodos;\n    fInicio;fFin;tiposGastos;formaDePago;fuenteGasto;egresoAdjunto;egresoAdjuntoNombre;\n    formularioCatalogoCategorias;catalogoCategorias;notaGasto;\n    file_archivo;subcategoriasFiltro;subcategoria_;categoria_;categoriasFiltro;fechaGasto;\n    @ViewChild('datatableGastos')datatableGastos;\n    @ViewChild('datatableCategorias')datatableCategorias;\n    @ViewChild('datatableSubcategorias')datatableSubcategorias;\n    chksGastos = [];\n    datosCategorias;datosSubcategorias;categoriaAlta;nombreCategoria;idCategoriaPadre;subcategoriaAlta;\n    categoriaGasto;subcategoriaGasto;totalGastoAcumulado;\n    constructor(private contabilidadService: ContabilidadService, private catalogosService: CatalogosService,private fb: FormBuilder) {\n        this.responsable = '0';\n        this.altaNuevoGasto = false;\n        this.categoriaAlta = this.subcategoriaAlta = false;\n        this.formularioCatalogoCategorias = false;\n        this.tipoGastoFiltro = this.categoriaGasto = this.subcategoriaGasto = this.fuenteGasto = \"0\";\n        this.categoria_ = this.subcategoria_ = this.idCategoriaPadre = this.subcategoriaGasto = 0;\n        this.fInicio = `${moment().format('YYYY')}-01-01`;\n        this.fFin =  moment().format('YYYY-MM-DD');\n        this._obtenerEmpleados();\n        //this._obtenerCatalogoGastos();\n        this._formasDePago();\n        this._obtenerCatalogoCategorias();\n        this.frmSolicitud = fb.group({\n            'File': [null]\n        });\n    }\n    subcategorias = [];\n    _obtenerCatalogoCategorias(){\n        this.catalogosService.obtenerCatalogoCategorias().then(res=>{\n            this.catalogoCategorias = res['Data'];\n            console.log('catalogoCategorias',this.catalogoCategorias);\n        }).catch(err=>{console.log('err',err);});\n    }\n    _formasDePago(){\n        this.catalogosService.obtenerCuentasEspeciales().then(res =>{\n            let datos = res['Data'].filter(ob=>ob.Activa == 1);\n/*            let nombresCuentas = [];\n            datos.forEach(da=>{\n//                nombresCuentas.push(`${da.Nombre}-${da.Numero}`);\n                nombresCuentas.push(`${da.Nombre}`);\n            });\n            this.formaDePago =  nombresCuentas;*/\n            this.formaDePago = datos;\n        }).catch(err=>{console.log('err',err);});\n    }\n    _obtenerCatalogoGastos(){\n        this.catalogosService.obtenerCatalogoGastos().then(res =>{\n            this.catalogoGastos =  res['Data'];\n            let catalogo_ = [];\n            this.catalogoGastos.forEach(tips=>{\n                catalogo_.push(tips.Tipo);\n            });\n            this.tiposGastos =  catalogo_;\n        }).catch(err=>{console.log('err',err);});\n    }\n    _obtenerEmpleados(){\n        this._limpiarVistaYVariables();\n        this.catalogosService.obtenerEmpleados().then(res =>{\n            this.vistaCentro = true;\n            this.empladosActivos =  { Datos : res['Data']};\n            this.nombresEmpleados = res['Data'].map((key)=>{\n                return key.Nombre;\n            });\n        }).catch(err=>{this._limpiarVistaYVariables();});\n    }\n    filtrarGastos = (text$: Observable<string>) =>\n    text$.pipe( debounceTime(200), distinctUntilChanged(),\n      map(term => term === ''?[]:this.tiposGastos.filter(ob => ob.toUpperCase().indexOf(term.toUpperCase()) > -1))\n    );\n    filtrarFuentes = (text$: Observable<string>) =>\n    text$.pipe( debounceTime(200), distinctUntilChanged(),\n      map(term => term === ''?[]:this.formaDePago.filter(ob => ob.toUpperCase().indexOf(term.toUpperCase()) > -1))\n    );\n/*    filtrarResponsables = (text$: Observable<string>) =>\n      text$.pipe( debounceTime(200), distinctUntilChanged(),\n        map(term => term === ''?[]:this.nombresEmpleados.filter(ob => ob.toUpperCase().indexOf(term.toUpperCase()) > -1))\n      );*/\n    ngOnInit() {}\n    nombreArchivo(event){\n        let file: File = event.target.files[0];\n        let renderFile: FileReader = new FileReader();\n            this.egresoAdjuntoNombre = file.name; this.egresoAdjunto = file;\n            renderFile.readAsDataURL(file);\n            renderFile.onloadend = () => {\n                if (renderFile.result) { this.egresoAdjunto =  renderFile.result }\n            }\n    }\n    nuevoGasto(){\n        //Gasto nuevo \n        this._limpiarVistaYVariables();\n        this._delay(100).then(res=>{\n            this.altaNuevoGasto =  (this.altaNuevoGasto)?false:true;\n            this.vistaCentro= true;\n            this.contabilidadService.obtenerFolioGasto().then(res=>{\n                let idGas =  0;\n                if(res['Data'][0]){\n                    idGas = res['Data'][0].IdGasto;\n                }\n                this.folGasto = `GAS-${idGas+1}`;\n            }).catch(err=>{\n                swal('Error','Ocurrio un problema al obtener el folio automatico, solicita apoyo en soporte','error');\n            })\n        })\n    }\n    importarArchivo($event){\n        return new Promise((resolve, reject) => {\n            try {\n                let uploadFiles = $event.target.files;\n                let file: File = uploadFiles[0];\n                let myReader: FileReader = new FileReader();\n\n                myReader.readAsDataURL(file);\n\n                myReader.onloadend = (e) => {\n                    return resolve(myReader.result);\n                };\n            } catch (error) {\n                return reject({ errorMessage: \"No se pudo cargar el archivo\", error });\n            }\n        });\n    }\n    importar_excel($event): void {\n        let fileObject;\n        let file: File = $event.target.files[0];\n        let nom = file.name.split('.');\n        let compExt = `${nom[nom.length-1]}`;\n            if(compExt.toUpperCase() != 'XLSX'){\n                swal('error','El formato del archivo no es valido debe ser xlsx ','error');\n            }else{\n            this.importarArchivo($event).then((resultado: any) => {\n                //console.log('resu',resultado);\n                if (resultado) {\n                    fileObject = { file: resultado.substring(78), Tipo: `Gasto`, Ext: compExt}\n                }\n                this.frmSolicitud.controls[\"File\"].setValue(null);\n                return this.contabilidadService.subirExcelPartidas(fileObject);\n            }).then(res=>{\n    //            console.log('res',res);    \n                let tipo = res['Tipo'];\n                swal('Exito', `${res['Operacion']}`, tipo);\n                this.chksGastos = [];\n                return this._delay(1000);\n            }).then(re=>{\n                this.obtenerGastos();\n            }).catch(error => {\n                console.log('error',error);\n            });\n        }\n    }\n    modificarGasto(){\n        //Modificar Gasto\n    }\n    guardarNuevoGasto(){\n        //this._limpiarVistaYVariables();\n        let usuario = JSON.parse(localStorage.getItem('Datos'));\n        let error = this._validarGastos();\n        if(error){\n            swal('Error', `${error}`, 'error');\n        }else{\n        let cuenta = this.formaDePago.find(ob=>ob.IdCuenta == this.fuenteGasto);\n        let formaPago = (cuenta.Nombre == 'Efectivo')?'Efectivo':'Tarjeta';\n//        let tipoGasto =  this.subcategorias.find(ob=>ob.IdSubcategoria == this.subcategoriaGasto).Subcategoria;\n        let datosGuardar =  { Usuario:usuario, Concepto: this.conceptoGasto,Nota:this.notaGasto,Categoria :this.categoriaGasto,Subcategoria:this.subcategoriaGasto , Responsable:this.responsable, Total : this.totalGasto, Tipo :this.subcategoriaGasto,FormaPago:formaPago,IdCuenta:cuenta.IdCuenta , Adjunto:this.egresoAdjunto, Fecha_gasto: this.fechaGasto}\n        console.log('datos guardar gasto',datosGuardar);\n            this.contabilidadService.guardarNuevoGasto(datosGuardar).then(dat =>{\n                swal('Exito', 'Gasto guardado correctamente', 'success');\n                this._limpiarVistaYVariables();\n                this.obtenerGastos();\n            }).catch(err=>{\n                console.log('error obtener gastos', err);\n            })\n        }\n    }\n    _validarGastos(){\n        if(!this.subcategoriaGasto){\n            return 'Debes de escoger al menos una Subcategoria para el gasto';\n        }else if(this.totalGasto == '' || this.totalGasto == null ||  this.totalGasto == 0){\n            return 'Debes de especificar un total que sea mayor que cero';\n        }else if(!this.fuenteGasto){\n            return `Debes seleccionarl al menos una cuenta`;\n        }else if(this.responsable == '' || this.responsable == null){\n            return 'Debes de especificar al menos un responsable';\n        }\n        return ``;\n    }\n    obtenerGastos(){\n        this._limpiarVistaYVariables();\n        this.contabilidadService.obtenerGastos().then(res =>{\n            this.gastosTodos = res['Data'];\n            let gastosOrdenados = (res['Data'])?this._ordenarDatosGastos(res['Data']):[{Resultados:'No existen Gastos registrados'}];\n            this.datosGastos = { Opciones:{Eliminar:true, Seleccionar: true}, Datos: gastosOrdenados};\n            if(this.datatableGastos != null){\n                this.datatableGastos._reiniciarRegistros(this.datosGastos);\n            }\n            this.vistaCentro=true;\n        }).catch(err=>{\n            console.log('error obtener gastos', err);\n            this._limpiarVistaYVariables();\n        })\n    }\n    _ordenarDatosGastos(datos){\n        let datosOrdenados = [];\n        if(datos.lengt > 1){\n            let arrayFechas = datos.map((d) => moment(d.Fecha_gasto));\n            let str = ``;\n            arrayFechas.forEach(a=>{\n                str += `${a},`;\n            })\n            this.fInicio = moment.min(arrayFechas).format('YYYY-MM-DD');\n            this.fFin = moment.max(arrayFechas).format('YYYY-MM-DD');\n        }\n        this.catalogoGastos  = [];\n        this.categoriasFiltro = [];\n        this.subcategoriasFiltro = [];\n        this.totalGastoAcumulado = 0;\n        datos.forEach(d=>{\n            this.totalGastoAcumulado += d.Total;\n            let exis = this.catalogoGastos.find(ob=>ob.Tipo == d.Tipo);\n            if(!exis){ this.catalogoGastos.push({Tipo:`${d.Tipo}`});}\n            let exis_c = this.categoriasFiltro.find(ob=>ob.Categoria == d.Categoria);\n            if(!exis_c){ this.categoriasFiltro.push({Categoria:`${d.Categoria}`});}\n            let exis_s = this.subcategoriasFiltro.find(ob=>ob.Subcategoria == d.Subcategoria);\n            if(!exis_s){ this.subcategoriasFiltro.push({Subcategoria:`${d.Subcategoria}`});}\n            datosOrdenados.push({\"Folio\": `${d.Folio_gasto}${d.IdGasto}`, \n            Responsable : d.Responsable,\n            Concepto:d.Concepto,\n            Categoria: d.Categoria,\n            Subcategoria: d.Subcategoria,\n            Fecha:d.Fecha_gasto, \n            \"Forma de Pago\":d.Forma_pago, \n            Total: d.Total,\n            ObjCompleto : d\n            });\n        });\n        console.log('tipos',this.tiposGastos);\n        return datosOrdenados;\n    }\n    borrarMultiplesGastos(){\n        if(this.chksGastos.length > 0){\n            console.log('chks',this.chksGastos);\n            let gas_ids = ``;\n            this.chksGastos.forEach(c=>{\n                gas_ids += `${c.IdGasto},`;\n            });\n            gas_ids = (gas_ids.indexOf(',') > -1)?gas_ids.slice(0,-1):gas_ids;\n            let datosEliminar =  {Ids: gas_ids};\n            let datosModal = {Titulo:'Cuidado',Contenido: `Estas a punto de eliminar todos estos gastos, esta operación no se puede deshacer, deseas continuar ? `, Tipo:'warning',Confirm:'Si Continuar'};\n            this._confirmarModal(datosModal).then(re=>{\n                return  this.contabilidadService.borrarMultiplesGastos(datosEliminar);\n            }).then(res=>{\n                this.obtenerGastos();\n            }).catch(err=>{\n                console.log('error obtener gastos', err);\n                this._limpiarVistaYVariables();\n            });\n        }else{\n            swal('Error','Debes seleccionar al menos un gasto para usar este boton', 'error');\n        }\n    }\n    filtrarGastosPorTipo(){\n        let restantes = this.gastosTodos;\n        console.log('restantes',restantes);\n        restantes = (this.fInicio)?restantes.filter(ob=>ob.Fecha_gasto.split('T')[0] >=  this.fInicio):restantes;\n        console.log('restantes',restantes);\n        restantes = (this.fFin)?restantes.filter(ob=>ob.Fecha_gasto.split('T')[0] <=  this.fFin):restantes;\n        console.log('restantes',restantes);\n        restantes = (this.categoria_ != 0)?restantes.filter(ob=>ob.Categoria ==  this.categoria_):restantes;\n        console.log('restantes',restantes);\n        restantes = (this.subcategoria_ != 0)?restantes.filter(ob=>ob.Subcategoria ==  this.subcategoria_):restantes;\n        console.log('restantes',restantes);\n        \n        this.datosGastos = { Opciones:{Eliminar:true}, Datos: this._ordenarDatosGastos(restantes)};\n        console.log('datosGastos',this.datosGastos);\n        \n        if(this.datatableGastos != null){\n            this.datatableGastos._reiniciarRegistros(this.datosGastos);\n        }\n        this.datosGastos = { Opciones:{Eliminar:true}, Datos: this._ordenarDatosGastos(restantes)};\n    }\n    _limpiarVistaYVariables(){ \n        this.categoriaAlta = this.subcategoriaAlta = this.vistaCentro = this.datosGastos = this.altaNuevoGasto =  this.formularioCatalogoCategorias = false ;\n        this.notaGasto = this.conceptoGasto=  this.nombreCategoria = '';\n          \n        this.responsable = this.fuenteGasto = this.categoriaGasto = this.subcategoriaGasto = this.totalGasto = this.idCategoriaPadre = 0;\n\n    }\n    borrarGasto(obj){\n        this.contabilidadService.borrarGasto(obj).then( res=>{\n            let movsRes = this.datosGastos.filter(ob => ob != obj.ObjCompleto);\n            this.datosGastos = movsRes;\n            //this.obtenerGastos();\n        }).catch(err=>{\n            console.log('error obtener gastos', err);\n        })\n    }\n    verCatalogoCategorias(event){\n        console.log('entro');\n        this._limpiarVistaYVariables();\n        this.catalogosService.obtenerCatalogoCategorias().then(res=>{\n            console.log('res',res);\n            this.vistaCentro = true;\n            this.formularioCatalogoCategorias = true;\n            this.catalogoCategorias = res['Data'];\n            let datosCat = {Opciones:{Eliminar:true,Editar:true},Datos: this._ordenarCats(this.catalogoCategorias)};\n            let datosSub = {Opciones:{Eliminar:true,Editar:true},Datos: this._ordenarSubs(this.catalogoCategorias)};\n            if(this.datatableCategorias != null){\n                this.datatableCategorias._reiniciarRegistros(datosCat);\n            }\n            this.datosCategorias = datosCat;\n            if(this.datatableSubcategorias != null){\n                this.datatableSubcategorias._reiniciarRegistros(datosSub);\n            }\n            this.datosSubcategorias = datosSub;\n            console.log('cat',this.datosCategorias);\n        }).catch(err=>{\n            console.log('error obteniendo catalogo', err);\n        })\n    }\n    editarCategoria(ev){\n        let datosActualizar =  {IdCategoria: ev['Obj'].IdCategoria, Categoria: ev['Categoria']};\n        console.log('datosActualizar',datosActualizar); \n        this.catalogosService.actaulizarCategorias(datosActualizar).then(re=>{\n            this.verCatalogoCategorias({});\n        }).catch(err=>{\n            console.log('error obteniendo catalogo', err);\n        })\n    }\n    editarSubcategoria(ev){\n        console.log('ev',ev); \n        let datosCat = this.catalogoCategorias.TodasPadres.find(c=>c.Categoria == ev['Categoria']);\n        if(datosCat){\n            let datosActualizar =  {IdCategoria: ev['Obj'].IdSubcategoria, Categoria: ev['Subcategoria'],IdPadre:datosCat.IdCategoria};\n            console.log('datosActualizar',datosActualizar);\n            this.catalogosService.actaulizarCategorias(datosActualizar).then(re=>{\n                this.verCatalogoCategorias({});\n            }).catch(err=>{\n                console.log('error obteniendo catalogo', err);\n            })\n        }else{\n            swal('Error', 'La categoria especificada no existe','error');            \n        }\n    }\n    nuevaCategoria(){\n        //this._limpiarVistaYVariables();\n        this.subcategoriaAlta = false;\n        this.idCategoriaPadre = 0;\n        this.nombreCategoria = '';\n        this.categoriaAlta = true;\n    }\n    nuevaSubcategoria(){\n        //this._limpiarVistaYVariables();\n        this.categoriaAlta = false;\n        this.idCategoriaPadre = 0;\n        this.nombreCategoria = '';\n        this.subcategoriaAlta = true;\n    }\n    obtenerPlantillaGastos(){\n        this.catalogosService.obtenerPlantillaGastos().then( res=>{\n            console.log('res',res);\n            this.descargarPlantilla(res['String'], 'Plantilla_gastos_');\n        }).catch(err=>{\n            console.log('error al obtener plantilla', err);\n        })\n    }\n    descargarPlantilla(data, nombre = \"Plantilla_gastos_\") {\n        let dwldLink = document.createElement(\"a\");\n        let url = 'data:application/vnd.ms-excel;base64,' + data;\n        let isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n        if (isSafariBrowser) {\n            dwldLink.setAttribute(\"target\", \"_blank\");\n        }\n        dwldLink.setAttribute(\"href\", url);\n        dwldLink.setAttribute(\"download\", `${nombre}${new Date().toLocaleDateString()}.xlsx`);\n        dwldLink.style.visibility = \"hidden\";\n        document.body.appendChild(dwldLink);\n        dwldLink.click();\n        document.body.removeChild(dwldLink);\n    }\n    guardarCategoriaNueva(){\n        let datos =  {Categoria: this.nombreCategoria, IdPadre: this.idCategoriaPadre};\n        this.catalogosService.guardarNuevaCategoria(datos).then(res=>{\n            let tipo = res['Tipo'];\n            swal('Exito', `${res['Operacion']}`, tipo);\n            this._limpiarVistaYVariables();\n            this.verCatalogoCategorias({});\n        }).catch(err=>{\n            console.log('error obteniendo catalogo', err);\n        });\n    }\n    seleccionarCategoria(){\n        let subcategorias = this.catalogoCategorias.Juntos.filter(ob=>ob.Categoria == this.categoriaGasto);\n        console.log('subca',subcategorias);\n        this.subcategorias = subcategorias;\n    }\n    borrarCategoria(obj){\n        console.log('obj',obj);\n        let datos = {IdCategoria : obj.IdCategoria };\n        this.catalogosService.borrarCategoria(datos).then( res=>{\n            this.verCatalogoCategorias({});\n        }).catch(err=>{\n            console.log('error obtener gastos', err);\n        })\n    }\n    borrarSubcategoria(obj){\n        let datos = {IdCategoria : obj.IdSubcategoria };\n        this.catalogosService.borrarCategoria(datos).then( res=>{\n            this.verCatalogoCategorias({});\n        }).catch(err=>{\n            console.log('error obtener gastos', err);\n        })\n    }\n    _ordenarCats(datos){\n        let datosOrdenados = [];\n        datos.TodasPadres.forEach(d=>{\n            let filtradas = datos.Juntos.filter(ob=>ob.IdCategoria ==  d.IdCategoria);\n            datosOrdenados.push({Categoria: d.Categoria,\"Total Subcategorias\": filtradas.length,ObjCompleto: d});\n        });\n        return datosOrdenados;\n    }\n    _ordenarSubs(datos){\n        let datosOrdenados = [];\n        datos.Juntos.forEach(d=>{\n            datosOrdenados.push({\"Categoria\": d.Categoria, Subcategoria: d.Subcategoria,ObjCompleto: d});\n        });\n        return datosOrdenados;\n    }\n    _confirmarModal(datosAlert){\n        return new Promise ((resolve,reject)=>{\n          swal({ title: datosAlert.Titulo,\n            html: `<p class=\"\">${datosAlert.Contenido}</p>`,\n            type: datosAlert.Tipo,\n            showCancelButton: true,\n            cancelButtonColor:'#D33',\n            confirmButtonText: datosAlert.Confirm\n          }).then((result)=>{\n            if(result.value){\n              return resolve(true);\n            }\n          }).catch((err)=>{\n            return reject(false);\n          });\n        });\n      }\n    _delay(ms){\n        return new Promise( resolve => setTimeout(resolve, ms) );\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { EgresosRoutingModule } from './egresos-routing.module';\nimport { EgresosComponent } from './egresos.component';\nimport { SharedModule} from '../../shared';\n@NgModule({\n    imports: [EgresosRoutingModule, SharedModule],\n    declarations: [EgresosComponent],\n}) \nexport class EgresosModule {}\n","import { Component, Injectable } from '@angular/core';\nimport { ApiService } from './API_service';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ContabilidadService {\n  constructor(private api : ApiService) {}\n  //134.209.238.227\n  obtenerGastos(){\n    return this.api.get(`/gastos/obtenerGastos`).then(response => {\n      return Promise.resolve(response);\n    }).catch(err => { return Promise.reject(err); });\n  }\n  guardarNuevoGasto(datos){\n    return this.api.post(`/gastos/guardarNuevoGasto`, datos).then(response => {\n      return Promise.resolve(response);\n    }).catch(err => { return Promise.reject(err); });\n  }\n  borrarGasto(obj){\n    return this.api.get(`/gastos/borrarGasto?Id=${obj.IdGasto}`).then(response => {\n      return Promise.resolve(response);\n    }).catch(err => { return Promise.reject(err); });\n  }\n  borrarMultiplesGastos(datos){\n    return this.api.post(`/gastos/borrarGastosMultiples`, datos).then(response => {\n      return Promise.resolve(response);\n    }).catch(err => { return Promise.reject(err); });\n  }\n  obtenerFolioGasto(){\n    return this.api.get(`/gastos/obtenerFolioGasto`).then(response => {\n      return Promise.resolve(response);\n    }).catch(err => { return Promise.reject(err); });\n  }\n  subirExcelPartidas(fileObject){\n    return this.api.post(`/gastos/subirExcelPartidas`,fileObject).then(response => {\n      return Promise.resolve(response);\n    }).catch(err => { return Promise.reject(err); });\n  }\n}\n"],"sourceRoot":""}