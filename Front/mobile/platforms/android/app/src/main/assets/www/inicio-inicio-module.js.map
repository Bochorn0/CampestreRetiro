{"version":3,"sources":["webpack:///./src/app/layout/inicio/inicio-routing.module.ts","webpack:///./src/app/layout/inicio/inicio.component.html","webpack:///./src/app/layout/inicio/inicio.component.scss","webpack:///./src/app/layout/inicio/inicio.component.ts","webpack:///./src/app/layout/inicio/inicio.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACF;AAErD,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe;KACvC;CACJ,CAAC;AAMF;IAAA;IACA,CAAC;IADY,mBAAmB;QAJ/B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,mBAAmB,CAC/B;IAAD,0BAAC;CAAA;AAD+B;;;;;;;;;;;;ACdhC,ifAAif,cAAc,oCAAoC,aAAa,qgEAAqgE,2BAA2B,+yBAA+yB,2BAA2B,yqBAAyqB,yBAAyB,myBAAmyB,yBAAyB,iqBAAiqB,0BAA0B,yyBAAyyB,0BAA0B,kqBAAkqB,2BAA2B,+yBAA+yB,2BAA2B,qZ;;;;;;;;;;;ACA75P,+BAA+B,yCAAyC,EAAE,cAAc,yCAAyC,EAAE,iBAAiB,yCAAyC,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlI;AACF;AACsB;AASjF;IASI,yBAAoB,mBAAuC;QAAvC,wBAAmB,GAAnB,mBAAmB,CAAoB;QARpD,WAAM,GAAe,EAAE,CAAC;QAS3B,IAAI,CAAC,aAAa,GAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,aAAa,GAAI,KAAK,CAAC;IAC5F,CAAC;IACD,kCAAQ,GAAR,cAAY,CAAC;IAEb,sBAAsB;IACtB,yCAAe,GAAf,UAAgB,KAAK;QAArB,iBAWC;QAVG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,kBAAQ;YACpD,KAAI,CAAC,aAAa,GAAE,IAAI,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAClC,IAAI,kBAAkB,GAAI,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YACnE,KAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;YAC3C,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAC,kBAAkB,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACR,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IACD,yCAAyC;IACzC,2CAAiB,GAAjB,UAAkB,KAAK;QACnB,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,qBAAqB,GAAG,EAAE,CAAC;QAC/B,KAAK,CAAC,OAAO,CAAC,aAAG;YACb,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC;QACnD,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,WAAC;YAChC,IAAI,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,YAAE,IAAE,SAAE,CAAC,UAAU,IAAI,CAAC,EAAlB,CAAkB,CAAC,CAAC;YACzD,qBAAqB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;QAC7C,CAAC,CAAC;QACF,MAAM,CAAC,qBAAqB,CAAC;IACjC,CAAC;IACD,mBAAmB;IACnB,uCAAa,GAAb,UAAc,KAAK;QAAnB,iBAUC;QATG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,kBAAQ;YAClD,KAAI,CAAC,aAAa,GAAE,IAAI,CAAC;YACzB,IAAI,gBAAgB,GAAG,KAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9D,KAAI,CAAC,cAAc,GAAG,gBAAgB,CAAC;YACvC,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,cAAc,CAAC,mBAAmB,EAAC,gBAAgB,CAAC,CAAC;QACjF,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACR,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IACD,mCAAmC;IACnC,yCAAe,GAAf,UAAgB,KAAK;QACjB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,oBAAoB,GAAG,EAAE,CAAC;QAC9B,KAAK,CAAC,OAAO,CAAC,aAAG;YACb,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,WAAC;YAC9B,IAAI,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,YAAE,IAAE,SAAE,CAAC,IAAI,IAAI,CAAC,EAAZ,CAAY,CAAC,CAAC;YACnD,oBAAoB,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC;QAC5C,CAAC,CAAC;QACF,MAAM,CAAC,oBAAoB,CAAC;IAChC,CAAC;IACD,gCAAgC;IAChC,wCAAc,GAAd,UAAe,KAAK;QAApB,iBAYC;QAXG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,kBAAQ;YACnD,KAAI,CAAC,aAAa,GAAE,IAAI,CAAC;YACzB,KAAI,CAAC,eAAe,GAAG,QAAQ,CAAC;YAChC,IAAI,KAAK,GAAI,EAAE,CAAC;YAChB,KAAK,CAAC,eAAe,CAAC,GAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAC3D,KAAK,CAAC,eAAe,CAAC,GAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAC3D,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,cAAc,CAAC,oBAAoB,EAAC,KAAK,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACR,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IACD,qBAAqB;IACrB,yCAAe,GAAf,UAAgB,KAAK;QAArB,iBAaC;QAZG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,kBAAQ;YACpD,KAAI,CAAC,aAAa,GAAE,IAAI,CAAC;YACzB,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;YACjC,IAAI,KAAK,GAAI,EAAE,CAAC;YAChB,KAAK,CAAC,cAAc,CAAC,GAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACzD,KAAK,CAAC,cAAc,CAAC,GAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YACzD,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,cAAc,CAAC,qBAAqB,EAAC,KAAK,CAAC,CAAC;YACtE,2CAA2C;QAC/C,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;YACR,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC/B,CAAC,CAAC;IACN,CAAC;IACD,gDAAgD;IAChD,kDAAwB,GAAxB;QACI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB;YAC/G,IAAI,CAAC,aAAa,GAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,aAAa,GAAI,KAAK,CAAC;IAC5F,CAAC;IACD,wCAAwC;IACxC,sCAAY,GAAZ,UAAa,MAAM,EAAE,KAAK;QACtB,IAAI,aAAa,GAAG,EAAE,CAAE;QACxB,IAAI,cAAc,GAAG,EAAE,CAAE;QACzB,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,aAAG;YAC1B,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YACnC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC;YACH,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,UAAU,EAAE;YAC3C,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE;YACzD,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE;SAC5D;IACL,CAAC;IACD,4CAA4C;IAC5C,wCAAc,GAAd,UAAe,MAAM,EAAE,KAAK;QACxB,IAAI,aAAa,GAAG,EAAE,CAAE;QAAC,IAAI,cAAc,GAAG,EAAE,CAAE;QAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,aAAG;YAC1B,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;YACnC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,iBAAE,cAAc,kBAAE,KAAK,SAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAC,KAAK,EAAE,CAAC;IAC9F,CAAC;IACD,8BAA8B;IAC9B,8CAAoB,GAApB,UAAqB,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,KAAK,GAAE,KAAK,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,YAAY,GAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,aAAa,GAAG,EAAC,QAAQ,EAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,CAAC,EAAE,KAAK,EAAC,YAAY,EAAC,CAAC;QACxG,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAC,MAAK,EAAC,cAAa,CAAC;QAC1E,EAAE,EAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,EAAC;YAC/B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IACD,6BAA6B;IAC7B,6CAAmB,GAAnB,UAAoB,CAAC;QACjB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAE,KAAK,CAAC;QAC/B,IAAI,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,YAAY,GAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACnD,IAAI,aAAa,GAAG,EAAC,QAAQ,EAAC,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,eAAe,CAAC,EAAE,KAAK,EAAC,YAAY,EAAC,CAAC;QACxG,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAC,MAAK,EAAC,cAAa,CAAC;QACxE,EAAE,EAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,EAAC;YAC9B,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAC7D,CAAC;IACL,CAAC;IACD,4BAA4B;IAC5B,4CAAkB,GAAlB,UAAmB,CAAC;QAChB,IAAI,CAAC,WAAW,CAAC,KAAK,GAAE,KAAK,CAAC;QAC9B,IAAI,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,YAAY,GAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAClD,IAAI,aAAa,GAAG,EAAC,QAAQ,EAAC,CAAC,aAAa,EAAE,UAAU,EAAE,aAAa,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,KAAK,EAAC,YAAY,EAAC,CAAC;QACtH,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAC,MAAK,EAAC,cAAa,CAAC;QACtE,EAAE,EAAC,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,EAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAC5D,CAAC;IACL,CAAC;IACD,8BAA8B;IAC9B,8CAAoB,GAApB,UAAqB,CAAC;QAClB,IAAI,CAAC,aAAa,CAAC,KAAK,GAAE,KAAK,CAAC;QAChC,IAAI,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QAC7C,IAAI,YAAY,GAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,aAAa,GAAG,EAAC,QAAQ,EAAC,CAAC,aAAa,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,aAAa,CAAC,EAAE,KAAK,EAAC,YAAY,EAAC,CAAC;QAClH,IAAI,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAC,MAAK,EAAC,cAAa,CAAC;QAC1E,EAAE,EAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,EAAC;YAC/B,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;QAC9D,CAAC;IACL,CAAC;IACD,yDAAyD;IACzD,kDAAwB,GAAxB,UAAyB,CAAC;QACtB,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtB,IAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACjC,IAAM,YAAY,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;YACtD,EAAE,CAAC,CAAE,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC3B,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YACrD,CAAC;QACH,CAAC;IACP,CAAC;IACD,mBAAmB;IACnB,sCAAY,GAAZ,UAAa,CAAC;QACV,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAjL8B;QAA9B,+DAAS,CAAC,mBAAmB,CAAC;;8DAAkB;IACnB;QAA7B,+DAAS,CAAC,kBAAkB,CAAC;;6DAAiB;IAClB;QAA5B,+DAAS,CAAC,iBAAiB,CAAC;;4DAAgB;IACd;QAA9B,+DAAS,CAAC,mBAAmB,CAAC;;8DAAkB;IAPxC,eAAe;QAR3B,+DAAS,CAAC;YACP,QAAQ,EAAE,YAAY;;;YAGtB,UAAU,EAAE,CAAC,2EAAgB,EAAE,CAAC;YAC/B,SAAS,EAAC,CAAC,yFAAmB,CAAC;SACnC,CAAC;yCAW0C,yFAAmB;OATlD,eAAe,CAsL3B;IAAD,sBAAC;CAAA;AAtL2B;;;;;;;;;;;;;;;;;;;;;;;;;ACXa;AACqB;AACT;AACT;AAM5C;IAAA;IAA2B,CAAC;IAAf,YAAY;QAJxB,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAE,0EAAmB,EAAE,oDAAY,CAAC;YAC7C,YAAY,EAAE,CAAE,iEAAe,CAAC;SACnC,CAAC;OACW,YAAY,CAAG;IAAD,mBAAC;CAAA;AAAH","file":"inicio-inicio-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InicioComponent } from './inicio.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: InicioComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class InicioRoutingModule {\n}\n","module.exports = \"<div [@routerTransition]>\\n<!--    <h2 class=\\\"text-muted\\\"> Bienvenido  <small></small></h2>-->\\n<!--    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <ngb-carousel>\\n                <ng-template ngbSlide *ngFor=\\\"let slider of sliders\\\">\\n                    <img class=\\\"img-fluid mx-auto d-block\\\" [src]=\\\"slider.imagePath\\\" alt=\\\"Random first slide\\\" width=\\\"100%\\\">\\n                    <div class=\\\"carousel-caption\\\">\\n                        <h3>{{slider.label}}</h3>\\n                        <p>{{slider.text}}</p>\\n                    </div>\\n                </ng-template>\\n            </ngb-carousel>\\n        </div>\\n    </div>\\n    <hr>-->\\n<!--    <ngb-alert type=\\\"warning\\\" *ngIf=\\\"closeAlert != false\\\" (close)=\\\"closeAlert= false\\\" >En este panel encontraras el resumen de los temas mas imporntantes en forma de sintesis</ngb-alert>-->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n            <app-stat [routerLink]=\\\"['/Cobranza']\\\" [routerLinkActive]=\\\"['router-link-active']\\\" [bgClass]=\\\"'primary'\\\" [icon]=\\\"'fa-pie-chart'\\\" [label]=\\\"'Ingresos'\\\"></app-stat>\\n        </div>\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n            <app-stat [routerLink]=\\\"['/Egresos']\\\" [routerLinkActive]=\\\"['router-link-active']\\\" [bgClass]=\\\"'warning'\\\" [icon]=\\\"'fa-tasks'\\\" [label]=\\\"'Gastos'\\\" ></app-stat>\\n        </div>\\n        <!-- <div class=\\\"col-xl-3 col-lg-6\\\">\\n            <app-stat [routerLink]=\\\"['/Cotizaciones']\\\" [routerLinkActive]=\\\"['router-link-active']\\\" [bgClass]=\\\"'info'\\\" [icon]=\\\"'fa-shopping-cart'\\\" [label]=\\\"'Cotizaciones'\\\"></app-stat>\\n        </div> -->\\n        <div class=\\\"col-xl-3 col-lg-6\\\">\\n            <app-stat [routerLink]=\\\"['/Catalogos']\\\" [routerLinkActive]=\\\"['router-link-active']\\\" [bgClass]=\\\"'secondary'\\\" [icon]=\\\"'fa-support'\\\"  [label]=\\\"'Catalogos'\\\"></app-stat>\\n        </div>\\n    </div>\\n    <hr />\\n    <div class=\\\"row\\\" *ngIf=\\\"this.datosDashboard\\\">\\n        <div class=\\\"col-xl-12 col-lg-12\\\">\\n            <app-datatables-general *ngIf=\\\"this.datosDashboard\\\" [datosDatatable]=\\\"this.datosDashboard\\\"></app-datatables-general>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"this.reporteActivo\\\">\\n        <div class=\\\"col-xl-12 col-lg-12 col-xs-12\\\">\\n            <!--Ingresos-->\\n            <div class=\\\"row\\\" *ngIf=\\\"this.reportesIngresos\\\" [@routerTransition]>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            {{this.ingresosChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <canvas baseChart height=\\\"150px\\\" [data]=\\\"ingresosChart.DatosContenido\\\" \\n                            [labels]=\\\"ingresosChart.DatosEtiqueta\\\" [chartType]=\\\"ingresosChart.Tipo\\\" \\n                            (chartHover)=\\\"chartHovered($event,ingresosChart.Datos)\\\" \\n                            (chartClick)=\\\"chartIngresosClicked($event)\\\">\\n                            </canvas>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\" *ngIf=\\\"this.ingresosChart.Tabla\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Datos {{this.ingresosChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <app-datatables-general #datatableIngresos *ngIf=\\\"this.ingresosChart.Tabla\\\" [datosDatatable]=\\\"this.ingresosChart.Tabla\\\"></app-datatables-general>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--Gastos A la fecha-->\\n            <div class=\\\"row\\\" *ngIf=\\\"this.reportesGastos\\\" [@routerTransition]>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\" >\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            {{this.gastosChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <canvas baseChart height=\\\"150px\\\" [data]=\\\"gastosChart.DatosContenido\\\" \\n                            [labels]=\\\"gastosChart.DatosEtiqueta\\\" [chartType]=\\\"gastosChart.Tipo\\\" \\n                            (chartHover)=\\\"chartHovered($event,gastosChart.Datos)\\\" \\n                            (chartClick)=\\\"chartGastosClicked($event)\\\">\\n                            </canvas>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\" *ngIf=\\\"this.gastosChart.Tabla\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Datos {{this.gastosChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <app-datatables-general #datatableGastos *ngIf=\\\"this.gastosChart.Tabla\\\" [datosDatatable]=\\\"this.gastosChart.Tabla\\\"></app-datatables-general>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--Cartera Vencida-->\\n            <div class=\\\"row\\\" *ngIf=\\\"this.reportesCartera\\\" [@routerTransition]>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            {{this.carteraChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <canvas baseChart height=\\\"150px\\\" [data]=\\\"carteraChart.DatosContenido\\\" \\n                            [labels]=\\\"carteraChart.DatosEtiqueta\\\" [chartType]=\\\"carteraChart.Tipo\\\" \\n                            (chartHover)=\\\"chartHovered($event,carteraChart.Datos)\\\" \\n                            (chartClick)=\\\"chartCarteraClicked($event)\\\">\\n                            </canvas>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\" *ngIf=\\\"this.carteraChart.Tabla\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Datos {{this.carteraChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <app-datatables-general #datatableCartera *ngIf=\\\"this.carteraChart.Tabla\\\" [datosDatatable]=\\\"this.carteraChart.Tabla\\\"></app-datatables-general>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <!--Clientes contacto-->\\n            <div class=\\\"row\\\" *ngIf=\\\"reportesClientes\\\" [@routerTransition]>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            {{this.clientesChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <canvas baseChart height=\\\"150px\\\" [data]=\\\"clientesChart.DatosContenido\\\" \\n                            [labels]=\\\"clientesChart.DatosEtiqueta\\\" [chartType]=\\\"clientesChart.Tipo\\\" \\n                            (chartHover)=\\\"chartHovered($event,clientesChart.Datos)\\\" \\n                            (chartClick)=\\\"chartClientesClicked($event)\\\">\\n                            </canvas>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-xl-6 col-lg-6 col-xs-12\\\" *ngIf=\\\"this.clientesChart.Tabla\\\">\\n                    <div class=\\\"card mb-3\\\">\\n                        <div class=\\\"card-header\\\">\\n                            Datos {{this.clientesChart.Nombre}}\\n                        </div>\\n                        <div class=\\\"card-body\\\">\\n                            <app-datatables-general #datatableClientes *ngIf=\\\"this.clientesChart.Tabla\\\" [datosDatatable]=\\\"this.clientesChart.Tabla\\\"></app-datatables-general>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \".bg-primary {\\n  background-color: #10798D !important; }\\n\\n.bg-info {\\n  background-color: #359B83 !important; }\\n\\n.bg-warning {\\n  background-color: #D4EC8E !important; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { EstadisticasService } from '../../shared/services/estadisticas.service';\n@Component({\n    selector: 'app-inicio',\n    templateUrl: './inicio.component.html',\n    styleUrls: ['./inicio.component.scss'],\n    animations: [routerTransition()]\n    ,providers:[EstadisticasService]\n})\n\nexport class InicioComponent implements OnInit {\n    public alerts: Array<any> = [];\n    reporteActivo;reportesIngresos;reportesGastos;reportesCartera;reportesClientes;\n    ingresosChart;gastosChart;carteraChart;clientesChart;\n    @ViewChild('datatableClientes')datatableClientes;\n    @ViewChild('datatableCartera')datatableCartera;\n    @ViewChild('datatableGastos')datatableGastos;\n    @ViewChild('datatableIngresos')datatableIngresos;\n    \n    constructor(private estadisticasService:EstadisticasService) {\n        this.ingresosChart =this.gastosChart = this.carteraChart =  this.clientesChart =  false;\n    }\n    ngOnInit() {}\n    \n    //Reporte de Ingresos \n    ingresosResumen(event){\n        this._desactivarOtrosReportes();\n        this.estadisticasService.resumenIngresos().then(response=>{\n            this.reporteActivo =true;\n            console.log('ingresos', response);\n            let ingresosProcesados =  this._procesarIngresos(response[\"Data\"]);\n            this.reportesIngresos = ingresosProcesados;\n            this.ingresosChart = this._pieChartOrder(\"Resumen de Ingresos\",ingresosProcesados);\n        }).catch(err=>{\n            this.reporteActivo = false;\n        })\n    }\n    //Procesa y ordena los datos de ingresos \n    _procesarIngresos(Datos){\n        let tiposIngresos = [];\n        let contenidoTipoIngresos = [];\n        Datos.forEach(dat =>{\n            tiposIngresos[dat.Tipo_venta] = dat.Tipo_venta;\n        });\n        Object.keys(tiposIngresos).forEach(t => {\n            let coincidencias = Datos.filter(ob=>ob.Tipo_venta == t);\n            contenidoTipoIngresos[t] = coincidencias;\n        })\n        return contenidoTipoIngresos;\n    }\n    //Reporte de gastos\n    gastosResumen(event){\n        this._desactivarOtrosReportes();\n        this.estadisticasService.resumenGastos().then(response=>{\n            this.reporteActivo =true;\n            let gastosProcesados = this._procesarGastos(response[\"Data\"]);\n            this.reportesGastos = gastosProcesados;\n            this.gastosChart = this._pieChartOrder(\"Resumen de Gastos\",gastosProcesados);\n        }).catch(err=>{\n            this.reporteActivo = false;\n        })\n    }\n    //Procesa y ordena  datos de gastos\n    _procesarGastos(Datos){\n        let tiposGastos = [];\n        let contenidoTiposGastos = [];\n        Datos.forEach(dat =>{\n            tiposGastos[dat.Tipo] = dat.Tipo;\n        });\n        Object.keys(tiposGastos).forEach(t => {\n            let coincidencias = Datos.filter(ob=>ob.Tipo == t);\n            contenidoTiposGastos[t] = coincidencias;\n        })\n        return contenidoTiposGastos;\n    }\n    //Reporte de la cartera vencida \n    carteraResumen(event){\n        this._desactivarOtrosReportes();\n        this.estadisticasService.resumenCartera().then(response=>{\n            this.reporteActivo =true;\n            this.reportesCartera = response;\n            let Datos =  [];\n            Datos[\"Saldo Regular\"] =  response['Data'][0].SaldoRegular;\n            Datos[\"Saldo Vencido\"] =  response['Data'][0].SaldoVencido;\n            this.carteraChart = this._pieChartOrder(\"Resumen de Cartera\",Datos);\n        }).catch(err=>{\n            this.reporteActivo = false;\n        })\n    }\n    //Reporte de clientes\n    clientesResumen(event){\n        this._desactivarOtrosReportes();\n        this.estadisticasService.resumenClientes().then(response=>{\n            this.reporteActivo =true;\n            this.reportesClientes = response;\n            let Datos =  [];\n            Datos[\"Con Contacto\"] =  response['Data'][0].ConContacto;\n            Datos[\"Sin Contacto\"] =  response['Data'][0].SinContacto;\n            this.clientesChart = this._pieChartOrder(\"Resumen de Clientes\",Datos);\n            //this._pieChartOrder(response['Data'][0]);\n        }).catch(err=>{\n            this.reporteActivo = false;\n        })\n    }\n    //Desactiva los datos visibles de otros reportes\n    _desactivarOtrosReportes(){\n        this.reporteActivo = this.reportesIngresos = this.reportesGastos = this.reportesCartera = this.reportesClientes =\n        this.ingresosChart =this.gastosChart = this.carteraChart =  this.clientesChart =  false;\n    }\n    //Ordena los datos de un grafico linear \n    _linearChart(Titulo, Datos){\n        let DatosEtiqueta = [] ;\n        let DatosContenido = [] ;\n        let DatosAcumulado = [];\n        Object.keys(Datos).forEach(key=>{\n            DatosEtiqueta.push(key.toString());\n            DatosContenido.push(Datos[key].length);\n        });\n\n        return [\n            { data: DatosContenido, label: 'Series A' },\n            { data: [28, 48, 40, 19, 86, 27, 90], label: 'Series B' },\n            { data: [18, 48, 77, 9, 100, 27, 40], label: 'Series C' }\n        ]\n    }\n    //Ordena los datos de una grafica de pastel \n    _pieChartOrder(Titulo, Datos){\n        let DatosEtiqueta = [] ; let DatosContenido = [] ;\n        Object.keys(Datos).forEach(key=>{\n            DatosEtiqueta.push(key.toString());\n            DatosContenido.push(Datos[key].length);\n        });\n        return { Nombre: Titulo, DatosEtiqueta, DatosContenido, Datos, Tipo: \"pie\", Tabla:false };\n    }\n    //Click en grafica de clientes\n    chartClientesClicked(e){\n        this.clientesChart.Tabla =false;\n        let label = this._interpreteEventoClicked(e);\n        let datosClicked =  this.clientesChart.Datos[label];\n        let datosSelected = {Columnas:[\"Nombre\", \"Direccion\", \"Contacto\", \"Fecha_ingreso\"] ,Datos:datosClicked};\n        this.clientesChart.Tabla = (this.clientesChart.Tabla)?false:datosSelected;\n        if(this.datatableClientes != null){\n            this.datatableClientes._reiniciarRegistros(datosSelected);\n        }                \n    }\n    //Click en grafica de cartera\n    chartCarteraClicked(e){\n        this.carteraChart.Tabla =false;\n        let label = this._interpreteEventoClicked(e);\n        let datosClicked =  this.carteraChart.Datos[label];\n        let datosSelected = {Columnas:[\"Nombre\", \"Direccion\", \"Contacto\", \"Fecha_ingreso\"] ,Datos:datosClicked};\n        this.carteraChart.Tabla = (this.carteraChart.Tabla)?false:datosSelected;\n        if(this.datatableCartera != null){\n            this.datatableCartera._reiniciarRegistros(datosSelected);\n        }\n    }\n    //Click en grafica de gastos\n    chartGastosClicked(e){\n        this.gastosChart.Tabla =false;\n        let label = this._interpreteEventoClicked(e);\n        let datosClicked =  this.gastosChart.Datos[label];\n        let datosSelected = {Columnas:[\"Folio_gasto\", \"Concepto\", \"Responsable\", \"Total\", \"Fecha_gasto\"] ,Datos:datosClicked};\n        this.gastosChart.Tabla = (this.gastosChart.Tabla)?false:datosSelected;\n        if(this.datatableGastos != null){\n            this.datatableGastos._reiniciarRegistros(datosSelected);\n        }                \n    }\n    //Click en grafica de ingresos\n    chartIngresosClicked(e){\n        this.ingresosChart.Tabla =false;\n        let label = this._interpreteEventoClicked(e);\n        let datosClicked =  this.ingresosChart.Datos[label];\n        let datosSelected = {Columnas:[\"Folio_venta\", \"IdRecibo\", \"Pagares\", \"Total\", \"Fecha_venta\"] ,Datos:datosClicked};\n        this.ingresosChart.Tabla = (this.ingresosChart.Tabla)?false:datosSelected;\n        if(this.datatableIngresos != null){\n            this.datatableIngresos._reiniciarRegistros(datosSelected);\n        }                \n    }\n    //Regresa la etiqueta de la grafica que fue seleccionada \n    _interpreteEventoClicked(e){\n        if (e.active.length > 0) {\n            const chart = e.active[0]._chart;\n            const activePoints = chart.getElementAtEvent(e.event);\n            if ( activePoints.length > 0) {\n                return chart.data.labels[activePoints[0]._index];\n            }\n          }\n    }\n    //Hover en grafica \n    chartHovered(e){\n        console.log('hover');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { InicioRoutingModule } from './inicio-routing.module';\nimport { InicioComponent } from './inicio.component';\nimport { SharedModule } from '../../shared';\n\n@NgModule({\n    imports: [ InicioRoutingModule, SharedModule],\n    declarations: [ InicioComponent]\n})\nexport class InicioModule {}\n"],"sourceRoot":""}